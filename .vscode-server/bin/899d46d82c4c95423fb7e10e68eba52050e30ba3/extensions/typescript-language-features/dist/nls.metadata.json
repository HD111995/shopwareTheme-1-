{"tsServer/serverProcess.electron":{"messages":["The path {0} doesn't point to a valid tsserver install. Falling back to bundled TypeScript version."],"keys":["noServerFound"]},"task/taskProvider":{"messages":["TypeScript Task in tasks.json contains \"\\\\\". TypeScript tasks tsconfig must use \"/\"","build - {0}","watch - {0}"],"keys":["badTsConfig","buildTscLabel","buildAndWatchTscLabel"]},"utils/api":{"messages":["invalid version"],"keys":["invalidVersion"]},"tsServer/versionProvider":{"messages":[],"keys":[]},"utils/tsconfig":{"messages":["Configure tsconfig.json","Configure jsconfig.json","File is not part of a TypeScript project. Click [here]({0}) to learn more.","File is not part of a JavaScript project Click [here]({0}) to learn more.","Please open a folder in VS Code to use a TypeScript or JavaScript project","Could not determine TypeScript or JavaScript project. Unsupported file type","Could not determine TypeScript or JavaScript project"],"keys":["typescript.configureTsconfigQuickPick","typescript.configureJsconfigQuickPick","typescript.noTypeScriptProjectConfig","typescript.noJavaScriptProjectConfig","typescript.projectConfigNoWorkspace","typescript.projectConfigUnsupportedFile","typescript.projectConfigCouldNotGetInfo"]},"typescriptServiceClient":{"messages":["The path {0} doesn't point to a valid tsserver install. Falling back to bundled TypeScript version.","TypeScript language server exited with error. Error message is: {0}","TS Server logging is off. Please set `typescript.tsserver.log` and restart the TS server to enable logging","Enable logging and restart TS server","TS Server has not started logging.","Could not open TS Server log file","Report Issue","The TypeScript language service died 5 times right after it got started. The service will not be restarted.","The TypeScript language service died unexpectedly 5 times in the last 5 Minutes.","The TypeScript language service died unexpectedly.","Please update your TypeScript version","The workspace is using an old version of TypeScript ({0}).\n\nBefore reporting an issue, please update the workspace to use the latest stable TypeScript release to make sure the bug has not already been fixed.","Initializing JS/TS language features"],"keys":["noServerFound","serverExitedWithError","typescript.openTsServerLog.loggingNotEnabled","typescript.openTsServerLog.enableAndReloadOption","typescript.openTsServerLog.noLogFile","openTsServerLog.openFileFailedFailed","serverDiedReportIssue","serverDiedAfterStart","serverDied","serverDiedOnce","usingOldTsVersion.title","usingOldTsVersion.detail","serverLoading.progress"]},"languageFeatures/updatePathsOnRename":{"messages":["Checking for update of JS/TS imports","Update imports for '{0}'?","Update imports for the following {0} files?","No","Yes","Always automatically update imports","Never automatically update imports","...1 additional file not shown","...{0} additional files not shown"],"keys":["renameProgress.title","prompt","promptMoreThanOne","reject.title","accept.title","always.title","never.title","moreFile","moreFiles"]},"ui/intellisenseStatus":{"messages":["Loading IntelliSense status","No tsconfig","No jsconfig","Create tsconfig","Create jsconfig","Open config file","Partial Mode","Project Wide IntelliSense not available","Learn More","JS/TS IntelliSense Status"],"keys":["pending.detail","resolved.detail.noTsConfig","resolved.detail.noJsConfig","resolved.command.title.createTsconfig","resolved.command.title.createJsconfig","resolved.command.title.open","syntaxOnly.text","syntaxOnly.detail","syntaxOnly.command.title.learnMore","statusItem.name"]},"ui/versionStatus":{"messages":["TypeScript Version","TypeScript Version","Select Version"],"keys":["versionStatus.name","versionStatus.detail","versionStatus.command"]},"languageFeatures/completions":{"messages":["Auto import from {0}","Select code action to apply","Acquiring typings...","Acquiring typings definitions for IntelliSense."],"keys":["autoImportLabel","selectCodeAction",{"key":"acquiringTypingsLabel","comment":["Typings refers to the *.d.ts typings files that power our IntelliSense. It should not be localized"]},{"key":"acquiringTypingsDetail","comment":["Typings refers to the *.d.ts typings files that power our IntelliSense. It should not be localized"]}]},"languageFeatures/directiveCommentCompletions":{"messages":["Enables semantic checking in a JavaScript file. Must be at the top of a file.","Disables semantic checking in a JavaScript file. Must be at the top of a file.","Suppresses @ts-check errors on the next line of a file.","Suppresses @ts-check errors on the next line of a file, expecting at least one to exist."],"keys":["ts-check","ts-nocheck","ts-ignore","ts-expect-error"]},"languageFeatures/fileReferences":{"messages":["Find file references failed. Requires TypeScript 4.2+.","Find file references failed. No resource provided.","Find file references failed. Unsupported file type.","Find file references failed. Unknown file type.","Finding file references"],"keys":["error.unsupportedVersion","error.noResource","error.unsupportedLanguage","error.unknownFile","progress.title"]},"languageFeatures/fixAll":{"messages":["Fix All","Remove all unused code","Add all missing imports"],"keys":["autoFix.label","autoFix.unused.label","autoFix.missingImports.label"]},"languageFeatures/jsDocCompletions":{"messages":["JSDoc comment"],"keys":["typescript.jsDocCompletionItem.documentation"]},"languageFeatures/organizeImports":{"messages":["Organize Imports","Sort Imports"],"keys":["organizeImportsAction.title","sortImportsAction.title"]},"languageFeatures/quickFix":{"messages":["{0} (Fix all in file)"],"keys":["fixAllInFileLabel"]},"languageFeatures/refactor":{"messages":["Could not apply refactoring","Could not apply refactoring","Extract to constant","The current selection cannot be extracted","Extract to function","The current selection cannot be extracted","Learn more about JS/TS refactorings"],"keys":["refactoringFailed","refactoringFailed","extractConstant.disabled.title","extractConstant.disabled.reason","extractFunction.disabled.title","extractFunction.disabled.reason","refactor.documentation.title"]},"languageFeatures/rename":{"messages":["An error occurred while renaming file"],"keys":["fileRenameFail"]},"languageFeatures/codeLens/implementationsCodeLens":{"messages":["1 implementation","{0} implementations"],"keys":["oneImplementationLabel","manyImplementationLabel"]},"languageFeatures/codeLens/referencesCodeLens":{"messages":["1 reference","{0} references"],"keys":["oneReferenceLabel","manyReferenceLabel"]},"tsServer/versionManager":{"messages":["Select the TypeScript version used for JavaScript and TypeScript language features","Use VS Code's Version","Use Workspace Version","Allow","Dismiss","Never in this Workspace","This workspace contains a TypeScript version. Would you like to use the workspace TypeScript version for TypeScript and JavaScript language features?","Learn more about managing TypeScript versions"],"keys":["selectTsVersion","useVSCodeVersionOption","useWorkspaceVersionOption","allow","dismiss","suppress prompt","promptUseWorkspaceTsdk","learnMore"]},"utils/logger":{"messages":["TypeScript"],"keys":["channelName"]},"languageFeatures/codeLens/baseCodeLensProvider":{"messages":["Could not determine references"],"keys":["referenceErrorLabel"]}}