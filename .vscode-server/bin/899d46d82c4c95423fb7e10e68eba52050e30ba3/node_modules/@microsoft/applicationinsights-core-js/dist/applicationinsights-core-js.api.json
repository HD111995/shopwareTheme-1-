{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.17.1",
    "schemaVersion": 1004,
    "oldestForwardsCompatibleVersion": 1001,
    "tsdocConfig": {
      "$schema": "https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json",
      "noStandardTags": true,
      "tagDefinitions": [
        {
          "tagName": "@alpha",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@beta",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@defaultValue",
          "syntaxKind": "block"
        },
        {
          "tagName": "@decorator",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@deprecated",
          "syntaxKind": "block"
        },
        {
          "tagName": "@eventProperty",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@example",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@experimental",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@inheritDoc",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@internal",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@label",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@link",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@override",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@packageDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@param",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@privateRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@public",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@readonly",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@remarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@returns",
          "syntaxKind": "block"
        },
        {
          "tagName": "@sealed",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@see",
          "syntaxKind": "block"
        },
        {
          "tagName": "@throws",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@typeParam",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@virtual",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@betaDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@internalRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@preapproved",
          "syntaxKind": "modifier"
        }
      ],
      "supportForTags": {
        "@alpha": true,
        "@beta": true,
        "@defaultValue": true,
        "@decorator": true,
        "@deprecated": true,
        "@eventProperty": true,
        "@example": true,
        "@experimental": true,
        "@inheritDoc": true,
        "@internal": true,
        "@label": true,
        "@link": true,
        "@override": true,
        "@packageDocumentation": true,
        "@param": true,
        "@privateRemarks": true,
        "@public": true,
        "@readonly": true,
        "@remarks": true,
        "@returns": true,
        "@sealed": true,
        "@see": true,
        "@throws": true,
        "@typeParam": true,
        "@virtual": true,
        "@betaDocumentation": true,
        "@internalRemarks": true,
        "@preapproved": true
      }
    }
  },
  "kind": "Package",
  "canonicalReference": "@microsoft/applicationinsights-core-js!",
  "docComment": "",
  "name": "@microsoft/applicationinsights-core-js",
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "@microsoft/applicationinsights-core-js!",
      "name": "",
      "members": [
        {
          "kind": "Class",
          "canonicalReference": "@microsoft/applicationinsights-core-js!_InternalLogMessage:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class _InternalLogMessage "
            }
          ],
          "releaseTag": "Public",
          "name": "_InternalLogMessage",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@microsoft/applicationinsights-core-js!_InternalLogMessage:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `_InternalLogMessage` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(msgId: "
                },
                {
                  "kind": "Reference",
                  "text": "_InternalMessageId",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!_InternalMessageId:type"
                },
                {
                  "kind": "Content",
                  "text": ", msg: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", isUserAct?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ", properties?: "
                },
                {
                  "kind": "Reference",
                  "text": "Object",
                  "canonicalReference": "!Object:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "msgId",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "msg",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "isUserAct",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                },
                {
                  "parameterName": "properties",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  }
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/applicationinsights-core-js!_InternalLogMessage.dataType:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static dataType: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "dataType",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/applicationinsights-core-js!_InternalLogMessage#message:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "message: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "message",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/applicationinsights-core-js!_InternalLogMessage#messageId:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "messageId: "
                },
                {
                  "kind": "Reference",
                  "text": "_InternalMessageId",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!_InternalMessageId:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "messageId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@microsoft/applicationinsights-core-js!_InternalMessageId:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type _InternalMessageId = "
            },
            {
              "kind": "Content",
              "text": "number | typeof "
            },
            {
              "kind": "Reference",
              "text": "_InternalMessageId",
              "canonicalReference": "@microsoft/applicationinsights-core-js!_InternalMessageId:var"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "_InternalMessageId",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@microsoft/applicationinsights-core-js!_InternalMessageId:var",
          "docComment": "/**\n * Internal message ID. Please create a new one for every conceptually different message. Please keep alphabetically ordered\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "_InternalMessageId: "
            },
            {
              "kind": "Content",
              "text": "{\n    BrowserDoesNotSupportLocalStorage: number;\n    BrowserCannotReadLocalStorage: number;\n    BrowserCannotReadSessionStorage: number;\n    BrowserCannotWriteLocalStorage: number;\n    BrowserCannotWriteSessionStorage: number;\n    BrowserFailedRemovalFromLocalStorage: number;\n    BrowserFailedRemovalFromSessionStorage: number;\n    CannotSendEmptyTelemetry: number;\n    ClientPerformanceMathError: number;\n    ErrorParsingAISessionCookie: number;\n    ErrorPVCalc: number;\n    ExceptionWhileLoggingError: number;\n    FailedAddingTelemetryToBuffer: number;\n    FailedMonitorAjaxAbort: number;\n    FailedMonitorAjaxDur: number;\n    FailedMonitorAjaxOpen: number;\n    FailedMonitorAjaxRSC: number;\n    FailedMonitorAjaxSend: number;\n    FailedMonitorAjaxGetCorrelationHeader: number;\n    FailedToAddHandlerForOnBeforeUnload: number;\n    FailedToSendQueuedTelemetry: number;\n    FailedToReportDataLoss: number;\n    FlushFailed: number;\n    MessageLimitPerPVExceeded: number;\n    MissingRequiredFieldSpecification: number;\n    NavigationTimingNotSupported: number;\n    OnError: number;\n    SessionRenewalDateIsZero: number;\n    SenderNotInitialized: number;\n    StartTrackEventFailed: number;\n    StopTrackEventFailed: number;\n    StartTrackFailed: number;\n    StopTrackFailed: number;\n    TelemetrySampledAndNotSent: number;\n    TrackEventFailed: number;\n    TrackExceptionFailed: number;\n    TrackMetricFailed: number;\n    TrackPVFailed: number;\n    TrackPVFailedCalc: number;\n    TrackTraceFailed: number;\n    TransmissionFailed: number;\n    FailedToSetStorageBuffer: number;\n    FailedToRestoreStorageBuffer: number;\n    InvalidBackendResponse: number;\n    FailedToFixDepricatedValues: number;\n    InvalidDurationValue: number;\n    TelemetryEnvelopeInvalid: number;\n    CreateEnvelopeError: number;\n    CannotSerializeObject: number;\n    CannotSerializeObjectNonSerializable: number;\n    CircularReferenceDetected: number;\n    ClearAuthContextFailed: number;\n    ExceptionTruncated: number;\n    IllegalCharsInName: number;\n    ItemNotInArray: number;\n    MaxAjaxPerPVExceeded: number;\n    MessageTruncated: number;\n    NameTooLong: number;\n    SampleRateOutOfRange: number;\n    SetAuthContextFailed: number;\n    SetAuthContextFailedAccountName: number;\n    StringValueTooLong: number;\n    StartCalledMoreThanOnce: number;\n    StopCalledWithoutStart: number;\n    TelemetryInitializerFailed: number;\n    TrackArgumentsNotSpecified: number;\n    UrlTooLong: number;\n    SessionStorageBufferFull: number;\n    CannotAccessCookie: number;\n    IdTooLong: number;\n    InvalidEvent: number;\n    FailedMonitorAjaxSetRequestHeader: number;\n    SendBrowserInfoOnUserInit: number;\n    PluginException: number;\n    NotificationException: number;\n    SnippetScriptLoadFailure: number;\n    InvalidInstrumentationKey: number;\n    CannotParseAiBlobValue: number;\n    InvalidContentBlob: number;\n    TrackPageActionEventFailed: number;\n}"
            }
          ],
          "releaseTag": "Public",
          "name": "_InternalMessageId",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!_legacyCookieMgr:function(1)",
          "docComment": "/**\n * Helper to support backward compatibility for users that use the legacy cookie handling functions and the use the internal CoreUtils._canUseCookies global flag to enable/disable cookies usage. Note: This has the following deliberate side-effects - Creates the global (legacy) cookie manager if it does not already exist - Attempts to add \"listeners\" to the CoreUtils._canUseCookies property to support the legacy usage\n *\n * @param config - \n *\n * @param logger - \n *\n * @returns \n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function _legacyCookieMgr(config?: "
            },
            {
              "kind": "Reference",
              "text": "IConfiguration",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IConfiguration:interface"
            },
            {
              "kind": "Content",
              "text": ", logger?: "
            },
            {
              "kind": "Reference",
              "text": "IDiagnosticLogger",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IDiagnosticLogger:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "ICookieMgr",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ICookieMgr:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "config",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "logger",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "name": "_legacyCookieMgr"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!addEventHandler:function(1)",
          "docComment": "/**\n * Trys to add an event handler for the specified event to the window, body and document\n *\n * @param eventName - The name of the event\n *\n * @param callback - The callback function that needs to be executed for the given event  @return {boolean} - true if the handler was successfully added\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function addEventHandler(eventName: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", callback: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "eventName",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "callback",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "name": "addEventHandler"
        },
        {
          "kind": "Class",
          "canonicalReference": "@microsoft/applicationinsights-core-js!AppInsightsCore:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class AppInsightsCore extends "
            },
            {
              "kind": "Reference",
              "text": "BaseCore",
              "canonicalReference": "@microsoft/applicationinsights-core-js!BaseCore:class"
            },
            {
              "kind": "Content",
              "text": " "
            },
            {
              "kind": "Content",
              "text": "implements "
            },
            {
              "kind": "Reference",
              "text": "IAppInsightsCore",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IAppInsightsCore:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "AppInsightsCore",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@microsoft/applicationinsights-core-js!AppInsightsCore:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `AppInsightsCore` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor();"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": []
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/applicationinsights-core-js!AppInsightsCore#addNotificationListener:member(1)",
              "docComment": "/**\n * Adds a notification listener. The SDK calls methods on the listener when an appropriate notification is raised. The added plugins must raise notifications. If the plugins do not implement the notifications, then no methods will be called.\n *\n * @param listener - An INotificationListener object.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addNotificationListener(listener: "
                },
                {
                  "kind": "Reference",
                  "text": "INotificationListener",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!INotificationListener:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "listener",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "addNotificationListener"
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/applicationinsights-core-js!AppInsightsCore#initialize:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "initialize(config: "
                },
                {
                  "kind": "Reference",
                  "text": "IConfiguration",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IConfiguration:interface"
                },
                {
                  "kind": "Content",
                  "text": ", extensions: "
                },
                {
                  "kind": "Reference",
                  "text": "IPlugin",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IPlugin:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ", logger?: "
                },
                {
                  "kind": "Reference",
                  "text": "IDiagnosticLogger",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IDiagnosticLogger:interface"
                },
                {
                  "kind": "Content",
                  "text": ", notificationManager?: "
                },
                {
                  "kind": "Reference",
                  "text": "INotificationManager",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!INotificationManager:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "config",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "extensions",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  }
                },
                {
                  "parameterName": "logger",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  }
                },
                {
                  "parameterName": "notificationManager",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  }
                }
              ],
              "name": "initialize"
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/applicationinsights-core-js!AppInsightsCore#pollInternalLogs:member(1)",
              "docComment": "/**\n * Periodically check logger.queue for\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "pollInternalLogs(eventName?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "eventName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "pollInternalLogs"
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/applicationinsights-core-js!AppInsightsCore#removeNotificationListener:member(1)",
              "docComment": "/**\n * Removes all instances of the listener.\n *\n * @param listener - INotificationListener to remove.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "removeNotificationListener(listener: "
                },
                {
                  "kind": "Reference",
                  "text": "INotificationListener",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!INotificationListener:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "listener",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "removeNotificationListener"
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/applicationinsights-core-js!AppInsightsCore#track:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "track(telemetryItem: "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryItem",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!ITelemetryItem:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "telemetryItem",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "track"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          },
          "implementsTokenRanges": [
            {
              "startIndex": 4,
              "endIndex": 6
            }
          ]
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!areCookiesSupported:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function areCookiesSupported(logger?: "
            },
            {
              "kind": "Reference",
              "text": "IDiagnosticLogger",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IDiagnosticLogger:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "logger",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "areCookiesSupported"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!arrForEach:function(1)",
          "docComment": "/**\n * Performs the specified action for each element in an array. This helper exists to avoid adding a polyfil for older browsers that do not define Array.prototype.xxxx (eg. ES3 only, IE8) just in case any page checks for presence/absence of the prototype implementation. Note: For consistency this will not use the Array.prototype.xxxx implementation if it exists as this would cause a testing requirement to test with and without the implementations\n *\n * @param callbackfn - A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the array. It can return -1 to break out of the loop\n *\n * @param thisArg - [Optional] An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function arrForEach<T>(arr: "
            },
            {
              "kind": "Content",
              "text": "T[]"
            },
            {
              "kind": "Content",
              "text": ", callbackfn: "
            },
            {
              "kind": "Content",
              "text": "(value: T, index?: number, array?: T[]) => void | number"
            },
            {
              "kind": "Content",
              "text": ", thisArg?: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "arr",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "callbackfn",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            },
            {
              "parameterName": "thisArg",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "arrForEach"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!arrIndexOf:function(1)",
          "docComment": "/**\n * Returns the index of the first occurrence of a value in an array. This helper exists to avoid adding a polyfil for older browsers that do not define Array.prototype.xxxx (eg. ES3 only, IE8) just in case any page checks for presence/absence of the prototype implementation. Note: For consistency this will not use the Array.prototype.xxxx implementation if it exists as this would cause a testing requirement to test with and without the implementations\n *\n * @param searchElement - The value to locate in the array.\n *\n * @param fromIndex - The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function arrIndexOf<T>(arr: "
            },
            {
              "kind": "Content",
              "text": "T[]"
            },
            {
              "kind": "Content",
              "text": ", searchElement: "
            },
            {
              "kind": "Content",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": ", fromIndex?: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "arr",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "searchElement",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            },
            {
              "parameterName": "fromIndex",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "arrIndexOf"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!arrMap:function(1)",
          "docComment": "/**\n * Calls a defined callback function on each element of an array, and returns an array that contains the results. This helper exists to avoid adding a polyfil for older browsers that do not define Array.prototype.xxxx (eg. ES3 only, IE8) just in case any page checks for presence/absence of the prototype implementation. Note: For consistency this will not use the Array.prototype.xxxx implementation if it exists as this would cause a testing requirement to test with and without the implementations\n *\n * @param callbackfn - A function that accepts up to three arguments. The map method calls the callbackfn function one time for each element in the array.\n *\n * @param thisArg - An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function arrMap<T, R>(arr: "
            },
            {
              "kind": "Content",
              "text": "T[]"
            },
            {
              "kind": "Content",
              "text": ", callbackfn: "
            },
            {
              "kind": "Content",
              "text": "(value: T, index?: number, array?: T[]) => R"
            },
            {
              "kind": "Content",
              "text": ", thisArg?: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "R[]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "arr",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "callbackfn",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            },
            {
              "parameterName": "thisArg",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "R",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "arrMap"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!arrReduce:function(1)",
          "docComment": "/**\n * Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function. This helper exists to avoid adding a polyfil for older browsers that do not define Array.prototype.xxxx (eg. ES3 only, IE8) just in case any page checks for presence/absence of the prototype implementation. Note: For consistency this will not use the Array.prototype.xxxx implementation if it exists as this would cause a testing requirement to test with and without the implementations\n *\n * @param callbackfn - A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\n *\n * @param initialValue - If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function arrReduce<T, R>(arr: "
            },
            {
              "kind": "Content",
              "text": "T[]"
            },
            {
              "kind": "Content",
              "text": ", callbackfn: "
            },
            {
              "kind": "Content",
              "text": "(previousValue: T | R, currentValue?: T, currentIndex?: number, array?: T[]) => R"
            },
            {
              "kind": "Content",
              "text": ", initialValue?: "
            },
            {
              "kind": "Content",
              "text": "R"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "R"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "arr",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "callbackfn",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            },
            {
              "parameterName": "initialValue",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "R",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "arrReduce"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!attachEvent:function(1)",
          "docComment": "/**\n * Binds the specified function to an event, so that the function gets called whenever the event fires on the object\n *\n * @param obj - Object to add the event too.\n *\n * @param eventNameWithoutOn - String that specifies any of the standard DHTML Events without \"on\" prefix\n *\n * @param handlerRef - Pointer that specifies the function to call when event fires\n *\n * @param useCapture - [Optional] Defaults to false\n *\n * @returns True if the function was bound successfully to the event, otherwise false\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function attachEvent(obj: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ", eventNameWithoutOn: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", handlerRef: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ", useCapture?: "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 9,
            "endIndex": 10
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "obj",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "eventNameWithoutOn",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            },
            {
              "parameterName": "handlerRef",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              }
            },
            {
              "parameterName": "useCapture",
              "parameterTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              }
            }
          ],
          "name": "attachEvent"
        },
        {
          "kind": "Class",
          "canonicalReference": "@microsoft/applicationinsights-core-js!BaseCore:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class BaseCore implements "
            },
            {
              "kind": "Reference",
              "text": "IAppInsightsCore",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IAppInsightsCore:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "BaseCore",
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/applicationinsights-core-js!BaseCore#_extensions:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "_extensions: "
                },
                {
                  "kind": "Reference",
                  "text": "IPlugin",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IPlugin:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "_extensions",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false
            },
            {
              "kind": "Constructor",
              "canonicalReference": "@microsoft/applicationinsights-core-js!BaseCore:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `BaseCore` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor();"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": []
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/applicationinsights-core-js!BaseCore#config:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "config: "
                },
                {
                  "kind": "Reference",
                  "text": "IConfiguration",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IConfiguration:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "config",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/applicationinsights-core-js!BaseCore.defaultConfig:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static defaultConfig: "
                },
                {
                  "kind": "Reference",
                  "text": "IConfiguration",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IConfiguration:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "defaultConfig",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/applicationinsights-core-js!BaseCore#eventCnt:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "eventCnt(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "eventCnt"
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/applicationinsights-core-js!BaseCore#getCookieMgr:member(1)",
              "docComment": "/**\n * Get the current cookie manager for this instance\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getCookieMgr(): "
                },
                {
                  "kind": "Reference",
                  "text": "ICookieMgr",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!ICookieMgr:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "getCookieMgr"
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/applicationinsights-core-js!BaseCore#getNotifyMgr:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getNotifyMgr(): "
                },
                {
                  "kind": "Reference",
                  "text": "INotificationManager",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!INotificationManager:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "getNotifyMgr"
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/applicationinsights-core-js!BaseCore#getPerfMgr:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getPerfMgr(): "
                },
                {
                  "kind": "Reference",
                  "text": "IPerfManager",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IPerfManager:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "getPerfMgr"
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/applicationinsights-core-js!BaseCore#getProcessTelContext:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getProcessTelContext(): "
                },
                {
                  "kind": "Reference",
                  "text": "IProcessTelemetryContext",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IProcessTelemetryContext:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "getProcessTelContext"
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/applicationinsights-core-js!BaseCore#getTransmissionControls:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getTransmissionControls(): "
                },
                {
                  "kind": "Reference",
                  "text": "IChannelControls",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IChannelControls:interface"
                },
                {
                  "kind": "Content",
                  "text": "[][]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "getTransmissionControls"
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/applicationinsights-core-js!BaseCore#initialize:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "initialize(config: "
                },
                {
                  "kind": "Reference",
                  "text": "IConfiguration",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IConfiguration:interface"
                },
                {
                  "kind": "Content",
                  "text": ", extensions: "
                },
                {
                  "kind": "Reference",
                  "text": "IPlugin",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IPlugin:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ", logger?: "
                },
                {
                  "kind": "Reference",
                  "text": "IDiagnosticLogger",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IDiagnosticLogger:interface"
                },
                {
                  "kind": "Content",
                  "text": ", notificationManager?: "
                },
                {
                  "kind": "Reference",
                  "text": "INotificationManager",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!INotificationManager:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "config",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "extensions",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  }
                },
                {
                  "parameterName": "logger",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  }
                },
                {
                  "parameterName": "notificationManager",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  }
                }
              ],
              "name": "initialize"
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/applicationinsights-core-js!BaseCore#isInitialized:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isInitialized: "
                },
                {
                  "kind": "Content",
                  "text": "() => boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isInitialized",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/applicationinsights-core-js!BaseCore#logger:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "logger: "
                },
                {
                  "kind": "Reference",
                  "text": "IDiagnosticLogger",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IDiagnosticLogger:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "logger",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/applicationinsights-core-js!BaseCore#releaseQueue:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected releaseQueue(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "releaseQueue"
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/applicationinsights-core-js!BaseCore#setCookieMgr:member(1)",
              "docComment": "/**\n * Set the current cookie manager for this instance\n *\n * @param cookieMgr - The manager, if set to null/undefined will cause the default to be created\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setCookieMgr(cookieMgr: "
                },
                {
                  "kind": "Reference",
                  "text": "ICookieMgr",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!ICookieMgr:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "cookieMgr",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "setCookieMgr"
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/applicationinsights-core-js!BaseCore#setPerfMgr:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setPerfMgr(perfMgr: "
                },
                {
                  "kind": "Reference",
                  "text": "IPerfManager",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IPerfManager:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "perfMgr",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "setPerfMgr"
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/applicationinsights-core-js!BaseCore#track:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "track(telemetryItem: "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryItem",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!ITelemetryItem:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "telemetryItem",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "track"
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "@microsoft/applicationinsights-core-js!BaseTelemetryPlugin:class",
          "docComment": "/**\n * BaseTelemetryPlugin provides a basic implementation of the ITelemetryPlugin interface so that plugins can avoid implementation the same set of boiler plate code as well as provide a base implementation so that new default implementations can be added without breaking all plugins.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare abstract class BaseTelemetryPlugin implements "
            },
            {
              "kind": "Reference",
              "text": "ITelemetryPlugin",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ITelemetryPlugin:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "BaseTelemetryPlugin",
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/applicationinsights-core-js!BaseTelemetryPlugin#_getTelCtx:member",
              "docComment": "/**\n * Helper to return the current IProcessTelemetryContext, if the passed argument exists this just returns that value (helps with minification for callers), otherwise it will return the configured context or a temporary one.\n *\n * @param currentCtx - [Optional] The current execution context\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected _getTelCtx: "
                },
                {
                  "kind": "Content",
                  "text": "(currentCtx?: "
                },
                {
                  "kind": "Reference",
                  "text": "IProcessTelemetryContext",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IProcessTelemetryContext:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => "
                },
                {
                  "kind": "Reference",
                  "text": "IProcessTelemetryContext",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IProcessTelemetryContext:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "_getTelCtx",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "isStatic": false
            },
            {
              "kind": "Constructor",
              "canonicalReference": "@microsoft/applicationinsights-core-js!BaseTelemetryPlugin:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `BaseTelemetryPlugin` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor();"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": []
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/applicationinsights-core-js!BaseTelemetryPlugin#core:member",
              "docComment": "/**\n * Holds the core instance that was used during initialization\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "core: "
                },
                {
                  "kind": "Reference",
                  "text": "IAppInsightsCore",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IAppInsightsCore:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "core",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/applicationinsights-core-js!BaseTelemetryPlugin#diagLog:member",
              "docComment": "/**\n * Returns the current diagnostic logger that can be used to log issues, if no logger is currently assigned a new default one will be created and returned.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "diagLog: "
                },
                {
                  "kind": "Content",
                  "text": "(itemCtx?: "
                },
                {
                  "kind": "Reference",
                  "text": "IProcessTelemetryContext",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IProcessTelemetryContext:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => "
                },
                {
                  "kind": "Reference",
                  "text": "IDiagnosticLogger",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IDiagnosticLogger:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "diagLog",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/applicationinsights-core-js!BaseTelemetryPlugin#identifier:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "identifier: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "identifier",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/applicationinsights-core-js!BaseTelemetryPlugin#initialize:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "initialize(config: "
                },
                {
                  "kind": "Reference",
                  "text": "IConfiguration",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IConfiguration:interface"
                },
                {
                  "kind": "Content",
                  "text": ", core: "
                },
                {
                  "kind": "Reference",
                  "text": "IAppInsightsCore",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IAppInsightsCore:interface"
                },
                {
                  "kind": "Content",
                  "text": ", extensions: "
                },
                {
                  "kind": "Reference",
                  "text": "IPlugin",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IPlugin:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ", pluginChain?: "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryPluginChain",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!ITelemetryPluginChain:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "config",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "core",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "extensions",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 7
                  }
                },
                {
                  "parameterName": "pluginChain",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  }
                }
              ],
              "name": "initialize"
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/applicationinsights-core-js!BaseTelemetryPlugin#isInitialized:member",
              "docComment": "/**\n * Returns whether the plugin has been initialized\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isInitialized: "
                },
                {
                  "kind": "Content",
                  "text": "() => boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isInitialized",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/applicationinsights-core-js!BaseTelemetryPlugin#priority:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "priority: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "priority",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/applicationinsights-core-js!BaseTelemetryPlugin#processNext:member",
              "docComment": "/**\n * Call back for telemetry processing before it it is sent\n *\n * @param env - This is the current event being reported\n *\n * @param itemCtx - This is the context for the current request, ITelemetryPlugin instances can optionally use this to access the current core instance or define / pass additional information to later plugins (vs appending items to the telemetry item)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "processNext: "
                },
                {
                  "kind": "Content",
                  "text": "(env: "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryItem",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!ITelemetryItem:interface"
                },
                {
                  "kind": "Content",
                  "text": ", itemCtx: "
                },
                {
                  "kind": "Reference",
                  "text": "IProcessTelemetryContext",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IProcessTelemetryContext:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "processNext",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/applicationinsights-core-js!BaseTelemetryPlugin#processTelemetry:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "abstract processTelemetry(env: "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryItem",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!ITelemetryItem:interface"
                },
                {
                  "kind": "Content",
                  "text": ", itemCtx?: "
                },
                {
                  "kind": "Reference",
                  "text": "IProcessTelemetryContext",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IProcessTelemetryContext:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "env",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "itemCtx",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "processTelemetry"
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/applicationinsights-core-js!BaseTelemetryPlugin#setInitialized:member",
              "docComment": "/**\n * Internal helper to allow setting of the internal initialized setting for inherited instances and unit testing\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected setInitialized: "
                },
                {
                  "kind": "Content",
                  "text": "(isInitialized: boolean) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "setInitialized",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/applicationinsights-core-js!BaseTelemetryPlugin#setNextPlugin:member",
              "docComment": "/**\n * Set next extension for telemetry processing\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setNextPlugin: "
                },
                {
                  "kind": "Content",
                  "text": "(next: "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryPlugin",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!ITelemetryPlugin:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryPluginChain",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!ITelemetryPluginChain:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "setNextPlugin",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/applicationinsights-core-js!BaseTelemetryPlugin#version:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "version?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "version",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!canUseCookies:function(1)",
          "docComment": "/**\n * @deprecated\n *\n * - Use the core.getCookieMgr().isEnabled() Helper method to tell if document.cookie object is available and whether it can be used.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function canUseCookies(logger: "
            },
            {
              "kind": "Reference",
              "text": "IDiagnosticLogger",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IDiagnosticLogger:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "logger",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "canUseCookies"
        },
        {
          "kind": "Variable",
          "canonicalReference": "@microsoft/applicationinsights-core-js!CoreUtils:var",
          "docComment": "/**\n * Provides a collection of utility functions, included for backward compatibility with previous releases.\n *\n * @deprecated\n *\n * Marking this instance as deprecated in favor of direct usage of the helper functions as direct usage provides better tree-shaking and minification by avoiding the inclusion of the unused items in your resulting code.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "CoreUtils: "
            },
            {
              "kind": "Reference",
              "text": "ICoreUtils",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ICoreUtils:interface"
            }
          ],
          "releaseTag": "Public",
          "name": "CoreUtils",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!createClassFromInterface:function(1)",
          "docComment": "/**\n * Simpler helper to create a dynamic class that implements the interface and populates the values with the defaults. Only instance properties (hasOwnProperty) values are copied from the defaults to the new instance\n *\n * @param defaults - Simple helper\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function createClassFromInterface<T>(defaults?: "
            },
            {
              "kind": "Content",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "new () => T"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "defaults",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "createClassFromInterface"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!createCookieMgr:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function createCookieMgr(rootConfig?: "
            },
            {
              "kind": "Reference",
              "text": "IConfiguration",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IConfiguration:interface"
            },
            {
              "kind": "Content",
              "text": ", logger?: "
            },
            {
              "kind": "Reference",
              "text": "IDiagnosticLogger",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IDiagnosticLogger:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "ICookieMgr",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ICookieMgr:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "rootConfig",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "logger",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "name": "createCookieMgr"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!dateNow:function(1)",
          "docComment": "/**\n * Return the current time via the Date now() function (if available) and falls back to (new Date()).getTime() if now() is unavailable (IE8 or less) https://caniuse.com/#search=Date.now\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function dateNow(): "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "dateNow"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!deleteCookie:function(1)",
          "docComment": "/**\n * @deprecated\n *\n * - Use the core.getCookieMgr().del() Deletes a cookie by setting it's expiration time in the past.\n *\n * @param name - The name of the cookie to delete.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function deleteCookie(logger: "
            },
            {
              "kind": "Reference",
              "text": "IDiagnosticLogger",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IDiagnosticLogger:interface"
            },
            {
              "kind": "Content",
              "text": ", name: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "logger",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "name",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "name": "deleteCookie"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!detachEvent:function(1)",
          "docComment": "/**\n * Removes an event handler for the specified event\n *\n * @param Object - to remove the event from\n *\n * @param eventNameWithoutOn - The name of the event\n *\n * @param handlerRef - The callback function that needs to be executed for the given event\n *\n * @param useCapture - [Optional] Defaults to false\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function detachEvent(obj: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ", eventNameWithoutOn: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", handlerRef: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ", useCapture?: "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 9,
            "endIndex": 10
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "obj",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "eventNameWithoutOn",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            },
            {
              "parameterName": "handlerRef",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              }
            },
            {
              "parameterName": "useCapture",
              "parameterTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              }
            }
          ],
          "name": "detachEvent"
        },
        {
          "kind": "Class",
          "canonicalReference": "@microsoft/applicationinsights-core-js!DiagnosticLogger:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class DiagnosticLogger implements "
            },
            {
              "kind": "Reference",
              "text": "IDiagnosticLogger",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IDiagnosticLogger:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "DiagnosticLogger",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@microsoft/applicationinsights-core-js!DiagnosticLogger:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `DiagnosticLogger` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(config?: "
                },
                {
                  "kind": "Reference",
                  "text": "IConfiguration",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IConfiguration:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "config",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/applicationinsights-core-js!DiagnosticLogger#consoleLoggingLevel:member(1)",
              "docComment": "/**\n * 0: OFF (default) 1: CRITICAL 2: >= WARNING\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "consoleLoggingLevel(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "consoleLoggingLevel"
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/applicationinsights-core-js!DiagnosticLogger#enableDebugExceptions:member(1)",
              "docComment": "/**\n * When this is true the SDK will throw exceptions to aid in debugging.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enableDebugExceptions(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "enableDebugExceptions"
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/applicationinsights-core-js!DiagnosticLogger#identifier:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "identifier: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "identifier",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/applicationinsights-core-js!DiagnosticLogger#logInternalMessage:member(1)",
              "docComment": "/**\n * Logs a message to the internal queue.\n *\n * @param severity - The severity of the log message\n *\n * @param message - The message to log.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "logInternalMessage(severity: "
                },
                {
                  "kind": "Reference",
                  "text": "LoggingSeverity",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!LoggingSeverity:enum"
                },
                {
                  "kind": "Content",
                  "text": ", message: "
                },
                {
                  "kind": "Reference",
                  "text": "_InternalLogMessage",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!_InternalLogMessage:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "severity",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "message",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "logInternalMessage"
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/applicationinsights-core-js!DiagnosticLogger#maxInternalMessageLimit:member(1)",
              "docComment": "/**\n * The maximum number of internal messages allowed to be sent per page view\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "maxInternalMessageLimit(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "maxInternalMessageLimit"
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/applicationinsights-core-js!DiagnosticLogger#queue:member",
              "docComment": "/**\n * The internal logging queue\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "queue: "
                },
                {
                  "kind": "Reference",
                  "text": "_InternalLogMessage",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!_InternalLogMessage:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "queue",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/applicationinsights-core-js!DiagnosticLogger#resetInternalMessageCount:member(1)",
              "docComment": "/**\n * Resets the internal message count\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "resetInternalMessageCount(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "resetInternalMessageCount"
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/applicationinsights-core-js!DiagnosticLogger#telemetryLoggingLevel:member(1)",
              "docComment": "/**\n * 0: OFF 1: CRITICAL (default) 2: >= WARNING\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "telemetryLoggingLevel(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "telemetryLoggingLevel"
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/applicationinsights-core-js!DiagnosticLogger#throwInternal:member(1)",
              "docComment": "/**\n * This method will throw exceptions in debug mode or attempt to log the error as a console warning.\n *\n * @param severity - The severity of the log message\n *\n * @param message - The log message.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "throwInternal(severity: "
                },
                {
                  "kind": "Reference",
                  "text": "LoggingSeverity",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!LoggingSeverity:enum"
                },
                {
                  "kind": "Content",
                  "text": ", msgId: "
                },
                {
                  "kind": "Reference",
                  "text": "_InternalMessageId",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!_InternalMessageId:type"
                },
                {
                  "kind": "Content",
                  "text": ", msg: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", properties?: "
                },
                {
                  "kind": "Reference",
                  "text": "Object",
                  "canonicalReference": "!Object:interface"
                },
                {
                  "kind": "Content",
                  "text": ", isUserAct?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "severity",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "msgId",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "msg",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                },
                {
                  "parameterName": "properties",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  }
                },
                {
                  "parameterName": "isUserAct",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  }
                }
              ],
              "name": "throwInternal"
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/applicationinsights-core-js!DiagnosticLogger#warnToConsole:member(1)",
              "docComment": "/**\n * This will write a warning to the console if possible\n *\n * @param message - The warning message\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "warnToConsole(message: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "message",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "warnToConsole"
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!disableCookies:function(1)",
          "docComment": "/**\n * @deprecated\n *\n * - Use the core.getCookieMgr().disable() Force the SDK not to store and read any data from cookies.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function disableCookies(): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "disableCookies"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!doPerf:function(1)",
          "docComment": "/**\n * Helper function to wrap a function with a perf event\n *\n * @param mgrSource - The Performance Manager or a Performance provider source (may be null)\n *\n * @param getSource - The callback to create the source name for the event (if perf monitoring is enabled)\n *\n * @param func - The function to call and measure\n *\n * @param details - A function to return the payload details\n *\n * @param isAsync - Is the event / function being call asynchronously or synchronously\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function doPerf<T>(mgrSource: "
            },
            {
              "kind": "Reference",
              "text": "IPerfManagerProvider",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IPerfManagerProvider:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "IPerfManager",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IPerfManager:interface"
            },
            {
              "kind": "Content",
              "text": ", getSource: "
            },
            {
              "kind": "Content",
              "text": "() => string"
            },
            {
              "kind": "Content",
              "text": ", func: "
            },
            {
              "kind": "Content",
              "text": "(perfEvt?: "
            },
            {
              "kind": "Reference",
              "text": "IPerfEvent",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IPerfEvent:interface"
            },
            {
              "kind": "Content",
              "text": ") => T"
            },
            {
              "kind": "Content",
              "text": ", details?: "
            },
            {
              "kind": "Content",
              "text": "() => any"
            },
            {
              "kind": "Content",
              "text": ", isAsync?: "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 15,
            "endIndex": 16
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "mgrSource",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "parameterName": "getSource",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              }
            },
            {
              "parameterName": "func",
              "parameterTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 10
              }
            },
            {
              "parameterName": "details",
              "parameterTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 12
              }
            },
            {
              "parameterName": "isAsync",
              "parameterTypeTokenRange": {
                "startIndex": 13,
                "endIndex": 14
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "doPerf"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!dumpObj:function(1)",
          "docComment": "/**\n * Returns string representation of an object suitable for diagnostics logging.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function dumpObj(object: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "object",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "dumpObj"
        },
        {
          "kind": "Variable",
          "canonicalReference": "@microsoft/applicationinsights-core-js!EventHelper:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "EventHelper: "
            },
            {
              "kind": "Reference",
              "text": "IEventHelper",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IEventHelper:interface"
            }
          ],
          "releaseTag": "Public",
          "name": "EventHelper",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@microsoft/applicationinsights-core-js!EventsDiscardedReason:var",
          "docComment": "/**\n * The EventsDiscardedReason enumeration contains a set of values that specify the reason for discarding an event.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "EventsDiscardedReason: "
            },
            {
              "kind": "Content",
              "text": "{\n    Unknown: number;\n    NonRetryableStatus: number;\n    InvalidEvent: number;\n    SizeLimitExceeded: number;\n    KillSwitch: number;\n    QueueFull: number;\n}"
            }
          ],
          "releaseTag": "Public",
          "name": "EventsDiscardedReason",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!generateW3CId:function(1)",
          "docComment": "/**\n * generate W3C trace id\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function generateW3CId(): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "generateW3CId"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!getConsole:function(1)",
          "docComment": "/**\n * Returns the global console object\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getConsole(): "
            },
            {
              "kind": "Reference",
              "text": "Console",
              "canonicalReference": "!Console:interface"
            },
            {
              "kind": "Content",
              "text": " | null"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "getConsole"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!getCookie:function(1)",
          "docComment": "/**\n * @deprecated\n *\n * - Use the core.getCookieMgr().get() helper method to access userId and sessionId cookie\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getCookie(logger: "
            },
            {
              "kind": "Reference",
              "text": "IDiagnosticLogger",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IDiagnosticLogger:interface"
            },
            {
              "kind": "Content",
              "text": ", name: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "logger",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "name",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "name": "getCookie"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!getCrypto:function(1)",
          "docComment": "/**\n * Returns the crypto object if it is present otherwise null. This helper is used to access the crypto object from the current global instance which could be window or globalThis for a web worker\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getCrypto(): "
            },
            {
              "kind": "Reference",
              "text": "Crypto",
              "canonicalReference": "!Crypto:interface"
            },
            {
              "kind": "Content",
              "text": " | null"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "getCrypto"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!getDocument:function(1)",
          "docComment": "/**\n * Returns the global document object if it is present otherwise null. This helper is used to access the document object without causing an exception \"Uncaught ReferenceError: document is not defined\"\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getDocument(): "
            },
            {
              "kind": "Reference",
              "text": "Document",
              "canonicalReference": "!Document:interface"
            },
            {
              "kind": "Content",
              "text": " | null"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "getDocument"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!getExceptionName:function(1)",
          "docComment": "/**\n * Returns the name of object if it's an Error. Otherwise, returns empty string.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getExceptionName(object: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "object",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "getExceptionName"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!getGlobalInst:function(1)",
          "docComment": "/**\n * Return the named global object if available, will return null if the object is not available.\n *\n * @param name - The globally named object\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getGlobalInst<T>(name: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "name",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "getGlobalInst"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!getHistory:function(1)",
          "docComment": "/**\n * Returns the global history object if it is present otherwise null. This helper is used to access the history object without causing an exception \"Uncaught ReferenceError: history is not defined\"\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getHistory(): "
            },
            {
              "kind": "Reference",
              "text": "History",
              "canonicalReference": "!History:interface"
            },
            {
              "kind": "Content",
              "text": " | null"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "getHistory"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!getIEVersion:function(1)",
          "docComment": "/**\n * Gets IE version returning the document emulation mode if we are running on IE, or null otherwise\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getIEVersion(userAgentStr?: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "userAgentStr",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "getIEVersion"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!getJSON:function(1)",
          "docComment": "/**\n * Returns the global JSON object if it is present otherwise null. This helper is used to access the JSON object without causing an exception \"Uncaught ReferenceError: JSON is not defined\"\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getJSON(): "
            },
            {
              "kind": "Reference",
              "text": "JSON",
              "canonicalReference": "!JSON:interface"
            },
            {
              "kind": "Content",
              "text": " | null"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "getJSON"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!getLocation:function(1)",
          "docComment": "/**\n * Returns the global location object if it is present otherwise null. This helper is used to access the location object without causing an exception \"Uncaught ReferenceError: location is not defined\"\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getLocation(checkForMock?: "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Location",
              "canonicalReference": "!Location:interface"
            },
            {
              "kind": "Content",
              "text": " | null"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 5
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "checkForMock",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "getLocation"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!getMsCrypto:function(1)",
          "docComment": "/**\n * Returns the crypto object if it is present otherwise null. This helper is used to access the crypto object from the current global instance which could be window or globalThis for a web worker\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getMsCrypto(): "
            },
            {
              "kind": "Reference",
              "text": "Crypto",
              "canonicalReference": "!Crypto:interface"
            },
            {
              "kind": "Content",
              "text": " | null"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "getMsCrypto"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!getNavigator:function(1)",
          "docComment": "/**\n * Returns the global navigator object if it is present otherwise null. This helper is used to access the navigator object without causing an exception \"Uncaught ReferenceError: navigator is not defined\"\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getNavigator(): "
            },
            {
              "kind": "Reference",
              "text": "Navigator",
              "canonicalReference": "!Navigator:interface"
            },
            {
              "kind": "Content",
              "text": " | null"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "getNavigator"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!getPerformance:function(1)",
          "docComment": "/**\n * Returns the performance object if it is present otherwise null. This helper is used to access the performance object from the current global instance which could be window or globalThis for a web worker\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getPerformance(): "
            },
            {
              "kind": "Reference",
              "text": "Performance",
              "canonicalReference": "!Performance:interface"
            },
            {
              "kind": "Content",
              "text": " | null"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "getPerformance"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!getSetValue:function(1)",
          "docComment": "/**\n * Returns the current value from the target object if not null or undefined otherwise sets the new value and returns it\n *\n * @param target - The target object to return or set the default value\n *\n * @param field - The key for the field to set on the target\n *\n * @param defValue - [Optional] The value to set if not already present, when not provided a empty object will be added\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getSetValue<T, K extends "
            },
            {
              "kind": "Content",
              "text": "keyof T"
            },
            {
              "kind": "Content",
              "text": ">(target: "
            },
            {
              "kind": "Content",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": ", field: "
            },
            {
              "kind": "Content",
              "text": "K"
            },
            {
              "kind": "Content",
              "text": ", defValue?: "
            },
            {
              "kind": "Content",
              "text": "T[K]"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "T[K]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 9,
            "endIndex": 10
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "target",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            },
            {
              "parameterName": "field",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              }
            },
            {
              "parameterName": "defValue",
              "parameterTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "K",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "getSetValue"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!getWindow:function(1)",
          "docComment": "/**\n * Returns the global window object if it is present otherwise null. This helper is used to access the window object without causing an exception \"Uncaught ReferenceError: window is not defined\"\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getWindow(): "
            },
            {
              "kind": "Reference",
              "text": "Window",
              "canonicalReference": "!Window:interface"
            },
            {
              "kind": "Content",
              "text": " | null"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "getWindow"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!hasDocument:function(1)",
          "docComment": "/**\n * Checks if document object is available, this is required as we support the API running without a window /document (eg. Node server, electron webworkers) and if we attempt to assign a document object to a local variable or pass as an argument an \"Uncaught ReferenceError: document is not defined\" exception will be thrown. Defined as a function to support lazy / late binding environments.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function hasDocument(): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "hasDocument"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!hasHistory:function(1)",
          "docComment": "/**\n * Checks if history object is available, this is required as we support the API running without a window /document (eg. Node server, electron webworkers) and if we attempt to assign a history object to a local variable or pass as an argument an \"Uncaught ReferenceError: history is not defined\" exception will be thrown. Defined as a function to support lazy / late binding environments.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function hasHistory(): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "hasHistory"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!hasJSON:function(1)",
          "docComment": "/**\n * Checks if JSON object is available, this is required as we support the API running without a window /document (eg. Node server, electron webworkers) and if we attempt to assign a history object to a local variable or pass as an argument an \"Uncaught ReferenceError: JSON is not defined\" exception will be thrown. Defined as a function to support lazy / late binding environments.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function hasJSON(): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "hasJSON"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!hasNavigator:function(1)",
          "docComment": "/**\n * Checks if navigator object is available, this is required as we support the API running without a window /document (eg. Node server, electron webworkers) and if we attempt to assign a navigator object to a local variable or pass as an argument an \"Uncaught ReferenceError: navigator is not defined\" exception will be thrown. Defined as a function to support lazy / late binding environments.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function hasNavigator(): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "hasNavigator"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!hasOwnProperty:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function hasOwnProperty(obj: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ", prop: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "obj",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "prop",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "name": "hasOwnProperty"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!hasWindow:function(1)",
          "docComment": "/**\n * Checks if window object is available, this is required as we support the API running without a window /document (eg. Node server, electron webworkers) and if we attempt to assign a window object to a local variable or pass as an argument an \"Uncaught ReferenceError: window is not defined\" exception will be thrown. Defined as a function to support lazy / late binding environments.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function hasWindow(): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "hasWindow"
        },
        {
          "kind": "Interface",
          "canonicalReference": "@microsoft/applicationinsights-core-js!IAppInsightsCore:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IAppInsightsCore extends "
            },
            {
              "kind": "Reference",
              "text": "IPerfManagerProvider",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IPerfManagerProvider:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "IAppInsightsCore",
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IAppInsightsCore#addNotificationListener:member(1)",
              "docComment": "/**\n * Adds a notification listener. The SDK calls methods on the listener when an appropriate notification is raised. The added plugins must raise notifications. If the plugins do not implement the notifications, then no methods will be called.\n *\n * @param listener - An INotificationListener object.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addNotificationListener?(listener: "
                },
                {
                  "kind": "Reference",
                  "text": "INotificationListener",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!INotificationListener:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "listener",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "addNotificationListener"
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IAppInsightsCore#config:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "config: "
                },
                {
                  "kind": "Reference",
                  "text": "IConfiguration",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IConfiguration:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "config",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IAppInsightsCore#getCookieMgr:member(1)",
              "docComment": "/**\n * Get the current cookie manager for this instance\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getCookieMgr(): "
                },
                {
                  "kind": "Reference",
                  "text": "ICookieMgr",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!ICookieMgr:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "getCookieMgr"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IAppInsightsCore#getNotifyMgr:member(1)",
              "docComment": "/**\n * Get the current notification manager\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getNotifyMgr(): "
                },
                {
                  "kind": "Reference",
                  "text": "INotificationManager",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!INotificationManager:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "getNotifyMgr"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IAppInsightsCore#getProcessTelContext:member(1)",
              "docComment": "/**\n * Return a new instance of the IProcessTelemetryContext for processing events\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getProcessTelContext(): "
                },
                {
                  "kind": "Reference",
                  "text": "IProcessTelemetryContext",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IProcessTelemetryContext:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "getProcessTelContext"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IAppInsightsCore#getTransmissionControls:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getTransmissionControls(): "
                },
                {
                  "kind": "Reference",
                  "text": "IChannelControls",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IChannelControls:interface"
                },
                {
                  "kind": "Content",
                  "text": "[][]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "getTransmissionControls"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IAppInsightsCore#initialize:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "initialize(config: "
                },
                {
                  "kind": "Reference",
                  "text": "IConfiguration",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IConfiguration:interface"
                },
                {
                  "kind": "Content",
                  "text": ", extensions: "
                },
                {
                  "kind": "Reference",
                  "text": "IPlugin",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IPlugin:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ", logger?: "
                },
                {
                  "kind": "Reference",
                  "text": "IDiagnosticLogger",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IDiagnosticLogger:interface"
                },
                {
                  "kind": "Content",
                  "text": ", notificationManager?: "
                },
                {
                  "kind": "Reference",
                  "text": "INotificationManager",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!INotificationManager:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "config",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "extensions",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  }
                },
                {
                  "parameterName": "logger",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  }
                },
                {
                  "parameterName": "notificationManager",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  }
                }
              ],
              "name": "initialize"
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IAppInsightsCore#isInitialized:member",
              "docComment": "/**\n * Returns a value that indicates whether the instance has already been previously initialized.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isInitialized?: "
                },
                {
                  "kind": "Content",
                  "text": "() => boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "isInitialized",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IAppInsightsCore#logger:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "logger: "
                },
                {
                  "kind": "Reference",
                  "text": "IDiagnosticLogger",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IDiagnosticLogger:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "logger",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IAppInsightsCore#pollInternalLogs:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "pollInternalLogs?(eventName?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "eventName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "pollInternalLogs"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IAppInsightsCore#removeNotificationListener:member(1)",
              "docComment": "/**\n * Removes all instances of the listener.\n *\n * @param listener - INotificationListener to remove.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "removeNotificationListener?(listener: "
                },
                {
                  "kind": "Reference",
                  "text": "INotificationListener",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!INotificationListener:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "listener",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "removeNotificationListener"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IAppInsightsCore#setCookieMgr:member(1)",
              "docComment": "/**\n * Set the current cookie manager for this instance\n *\n * @param cookieMgr - The manager, if set to null/undefined will cause the default to be created\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setCookieMgr(cookieMgr: "
                },
                {
                  "kind": "Reference",
                  "text": "ICookieMgr",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!ICookieMgr:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "cookieMgr",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "setCookieMgr"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IAppInsightsCore#track:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "track(telemetryItem: "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryItem",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!ITelemetryItem:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "telemetryItem",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "track"
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@microsoft/applicationinsights-core-js!IChannelControls:interface",
          "docComment": "/**\n * Provides data transmission capabilities\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IChannelControls extends "
            },
            {
              "kind": "Reference",
              "text": "ITelemetryPlugin",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ITelemetryPlugin:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "IChannelControls",
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IChannelControls#flush:member(1)",
              "docComment": "/**\n * Flush to send data immediately; channel should default to sending data asynchronously\n *\n * @param async - : send data asynchronously when true\n *\n * @param callBack - : if specified, notify caller when send is complete\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "flush(async: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ", callBack?: "
                },
                {
                  "kind": "Content",
                  "text": "() => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "async",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "callBack",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "flush"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IChannelControls#pause:member(1)",
              "docComment": "/**\n * Pause sending data\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "pause(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "pause"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IChannelControls#resume:member(1)",
              "docComment": "/**\n * Resume sending data\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "resume(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "resume"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IChannelControls#teardown:member(1)",
              "docComment": "/**\n * Tear down transmission pipeline\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "teardown(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "teardown"
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@microsoft/applicationinsights-core-js!IConfiguration:interface",
          "docComment": "/**\n * Configuration provided to SDK core\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IConfiguration "
            }
          ],
          "releaseTag": "Public",
          "name": "IConfiguration",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IConfiguration#channels:member",
              "docComment": "/**\n * Channel queues that is setup by caller in desired order. If channels are provided here, core will ignore any channels that are already setup, example if there is a SKU with an initialized channel\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "channels?: "
                },
                {
                  "kind": "Reference",
                  "text": "IChannelControls",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IChannelControls:interface"
                },
                {
                  "kind": "Content",
                  "text": "[][]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "channels",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IConfiguration#connectionString:member",
              "docComment": "/**\n * Connection string of resource. Either this or instrumentationKey must be specified.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "connectionString?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "connectionString",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IConfiguration#cookieCfg:member",
              "docComment": "/**\n * [Optional] A Cookie Manager configuration which includes hooks to allow interception of the get, set and delete cookie operations. If this configuration is specified any specified enabled and domain properties will take precedence over the cookieDomain and disableCookiesUsage values.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "cookieCfg?: "
                },
                {
                  "kind": "Reference",
                  "text": "ICookieMgrConfig",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!ICookieMgrConfig:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "cookieCfg",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IConfiguration#cookieDomain:member",
              "docComment": "/**\n * @description Custom cookie domain. This is helpful if you want to share Application Insights cookies across subdomains. It can be set here or as part of the cookieCfg.domain, the cookieCfg takes precedence if both are specified.  @type {string}  @memberof IConfig\n *\n * @defaultValue\n *\n * \"\"\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "cookieDomain?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "cookieDomain",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IConfiguration#cookiePath:member",
              "docComment": "/**\n * @description Custom cookie path. This is helpful if you want to share Application Insights cookies behind an application gateway. It can be set here or as part of the cookieCfg.domain, the cookieCfg takes precedence if both are specified.  @type {string}  @memberof IConfig\n *\n * @defaultValue\n *\n * \"\"\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "cookiePath?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "cookiePath",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IConfiguration#diagnosticLogInterval:member",
              "docComment": "/**\n * Polling interval (in ms) for internal logging queue\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "diagnosticLogInterval?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "diagnosticLogInterval",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IConfiguration#disableCookiesUsage:member",
              "docComment": "/**\n * [Optional] A boolean that indicated whether to disable the use of cookies by the SDK. If true, the SDK will not store or read any data from cookies. Cookie usage can be re-enabled after initialization via the core.getCookieMgr().enable().\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "disableCookiesUsage?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "disableCookiesUsage",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IConfiguration#disableInstrumentationKeyValidation:member",
              "docComment": "/**\n * @type {boolean}  @memberof IConfiguration Flag that disables the Instrumentation Key validation.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "disableInstrumentationKeyValidation?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "disableInstrumentationKeyValidation",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IConfiguration#enableDebugExceptions:member",
              "docComment": "/**\n * If enabled, uncaught exceptions will be thrown to help with debugging\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enableDebugExceptions?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "enableDebugExceptions",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IConfiguration#enablePerfMgr:member",
              "docComment": "/**\n * [Optional] When enabled this will create local perfEvents based on sections of the code that have been instrumented to emit perfEvents (via the doPerf()) when this is enabled. This can be used to identify performance issues within the SDK, the way you are using it or optionally your own instrumented code. The provided IPerfManager implementation does NOT send any additional telemetry events to the server it will only fire the new perfEvent() on the INotificationManager which you can listen to. This also does not use the window.performance API, so it will work in environments where this API is not supported.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enablePerfMgr?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "enablePerfMgr",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IConfiguration#endpointUrl:member",
              "docComment": "/**\n * Endpoint where telemetry data is sent\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "endpointUrl?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "endpointUrl",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IConfiguration#extensionConfig:member",
              "docComment": "/**\n * Extension configs loaded in SDK\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "extensionConfig?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        [key: string]: any;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "extensionConfig",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IConfiguration#extensions:member",
              "docComment": "/**\n * Additional plugins that should be loaded by core at runtime\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "extensions?: "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryPlugin",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!ITelemetryPlugin:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "extensions",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IConfiguration#idLength:member",
              "docComment": "/**\n * [Optional] Identifies the default length used to generate random session and user id's if non currently exists for the user / session. Defaults to 22, previous default value was 5, if you need to keep the previous maximum length you should set this value to 5.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "idLength?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "idLength",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IConfiguration#instrumentationKey:member",
              "docComment": "/**\n * Instrumentation key of resource. Either this or connectionString must be specified.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "instrumentationKey?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "instrumentationKey",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IConfiguration#loggingLevelConsole:member",
              "docComment": "/**\n * Console logging level. All logs with a severity level higher than the configured level will be printed to console. Otherwise they are suppressed. ie Level 2 will print both CRITICAL and WARNING logs to console, level 1 prints only CRITICAL.\n *\n * Note: Logs sent as telemetry to instrumentation key will also be logged to console if their severity meets the configured loggingConsoleLevel\n *\n * 0: ALL console logging off 1: logs to console: severity >= CRITICAL 2: logs to console: severity >= WARNING\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "loggingLevelConsole?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "loggingLevelConsole",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IConfiguration#loggingLevelTelemetry:member",
              "docComment": "/**\n * Telemtry logging level to instrumentation key. All logs with a severity level higher than the configured level will sent as telemetry data to the configured instrumentation key.\n *\n * 0: ALL iKey logging off 1: logs to iKey: severity >= CRITICAL 2: logs to iKey: severity >= WARNING\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "loggingLevelTelemetry?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "loggingLevelTelemetry",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IConfiguration#maxMessageLimit:member",
              "docComment": "/**\n * Maximum number of iKey transmitted logging telemetry per page view\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "maxMessageLimit?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "maxMessageLimit",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IConfiguration#perfEvtsSendAll:member",
              "docComment": "/**\n * [Optional] Fire every single performance event not just the top level root performance event. Defaults to false.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "perfEvtsSendAll?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "perfEvtsSendAll",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@microsoft/applicationinsights-core-js!ICookieMgr:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ICookieMgr "
            }
          ],
          "releaseTag": "Public",
          "name": "ICookieMgr",
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ICookieMgr#del:member(1)",
              "docComment": "/**\n * Delete/Remove the named cookie if cookie support is available and enabled. Note: Not using \"delete\" as the name because it's a reserved word which would cause issues on older browsers\n *\n * @param name - The name of the cookie\n *\n * @param path - [optional] Path to set for the cookie, if not supplied will default to \"/\"\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "del(name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", path?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "path",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "del"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ICookieMgr#get:member(1)",
              "docComment": "/**\n * Get the value of the named cookie\n *\n * @param name - The name of the cookie\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get(name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "get"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ICookieMgr#isEnabled:member(1)",
              "docComment": "/**\n * Can the system use cookies, if this returns false then all cookie setting and access functions will return nothing\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isEnabled(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "isEnabled"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ICookieMgr#purge:member(1)",
              "docComment": "/**\n * Purge the cookie from the system if cookie support is available, this function ignores the enabled setting of the manager so any cookie will be removed. Note: Not using \"delete\" as the name because it's a reserved word which would cause issues on older browsers\n *\n * @param name - The name of the cookie\n *\n * @param path - [optional] Path to set for the cookie, if not supplied will default to \"/\"\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "purge(name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", path?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "path",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "purge"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ICookieMgr#set:member(1)",
              "docComment": "/**\n * Set the named cookie with the value and optional domain and optional\n *\n * @param name - The name of the cookie\n *\n * @param value - The value of the cookie (Must already be encoded)\n *\n * @param maxAgeSec - [optional] The maximum number of SECONDS that this cookie should survive\n *\n * @param domain - [optional] The domain to set for the cookie\n *\n * @param path - [optional] Path to set for the cookie, if not supplied will default to \"/\"\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "set(name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", value: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", maxAgeSec?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", domain?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", path?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "maxAgeSec",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                },
                {
                  "parameterName": "domain",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  }
                },
                {
                  "parameterName": "path",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  }
                }
              ],
              "name": "set"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ICookieMgr#setEnabled:member(1)",
              "docComment": "/**\n * Enable or Disable the usage of cookies\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setEnabled(value: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "setEnabled"
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@microsoft/applicationinsights-core-js!ICookieMgrConfig:interface",
          "docComment": "/**\n * Configuration definition for instance based cookie management configuration\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ICookieMgrConfig "
            }
          ],
          "releaseTag": "Public",
          "name": "ICookieMgrConfig",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ICookieMgrConfig#delCookie:member",
              "docComment": "/**\n * Hook function to delete the named cookie with the specified value, separated from setCookie to avoid the need to parse the value to determine whether the cookie is being added or removed.\n *\n * @param name - The name of the cookie\n *\n * @param cookieValue - The value to set to expire the cookie\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "delCookie?: "
                },
                {
                  "kind": "Content",
                  "text": "(name: string, cookieValue: string) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "delCookie",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ICookieMgrConfig#domain:member",
              "docComment": "/**\n * Custom cookie domain. This is helpful if you want to share Application Insights cookies across subdomains.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "domain?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "domain",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ICookieMgrConfig#enabled:member",
              "docComment": "/**\n * Defaults to true, A boolean that indicates whether the use of cookies by the SDK is enabled by the current instance. If false, the instance of the SDK initialized by this configuration will not store or read any data from cookies\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enabled?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "enabled",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ICookieMgrConfig#getCookie:member",
              "docComment": "/**\n * Hook function to fetch the named cookie value.\n *\n * @param name - The name of the cookie\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getCookie?: "
                },
                {
                  "kind": "Content",
                  "text": "(name: string) => string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "getCookie",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ICookieMgrConfig#path:member",
              "docComment": "/**\n * Specifies the path to use for the cookie, defaults to '/'\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "path?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "path",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ICookieMgrConfig#setCookie:member",
              "docComment": "/**\n * Hook function to set the named cookie with the specified value.\n *\n * @param name - The name of the cookie\n *\n * @param value - The value to set for the cookie\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setCookie?: "
                },
                {
                  "kind": "Content",
                  "text": "(name: string, value: string) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "setCookie",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@microsoft/applicationinsights-core-js!ICoreUtils:interface",
          "docComment": "/**\n * Provides a collection of utility functions, included for backward compatibility with previous releases.\n *\n * @deprecated\n *\n * Marking this interface and instance as deprecated in favor of direct usage of the helper functions as direct usage provides better tree-shaking and minification by avoiding the inclusion of the unused items in your resulting code.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ICoreUtils "
            }
          ],
          "releaseTag": "Public",
          "name": "ICoreUtils",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ICoreUtils#_canUseCookies:member",
              "docComment": "/**\n * Internal - Do not use directly.\n *\n * @deprecated\n *\n * Direct usage of this property is not recommend\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "_canUseCookies: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "_canUseCookies",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ICoreUtils#addEventHandler:member",
              "docComment": "/**\n * Trys to add an event handler for the specified event to the window, body and document\n *\n * @param eventName - The name of the event\n *\n * @param callback - The callback function that needs to be executed for the given event  @return {boolean} - true if the handler was successfully added\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addEventHandler: "
                },
                {
                  "kind": "Content",
                  "text": "(eventName: string, callback: any) => boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "addEventHandler",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ICoreUtils#arrForEach:member",
              "docComment": "/**\n * Performs the specified action for each element in an array. This helper exists to avoid adding a polyfil for older browsers that do not define Array.prototype.xxxx (eg. ES3 only, IE8) just in case any page checks for presence/absence of the prototype implementation. Note: For consistency this will not use the Array.prototype.xxxx implementation if it exists as this would cause a testing requirement to test with and without the implementations\n *\n * @param callbackfn - A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the array. It can return -1 to break out of the loop\n *\n * @param thisArg - [Optional] An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "arrForEach: "
                },
                {
                  "kind": "Content",
                  "text": "<T>(arr: T[], callbackfn: (value: T, index?: number, array?: T[]) => void | number, thisArg?: any) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "arrForEach",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ICoreUtils#arrIndexOf:member",
              "docComment": "/**\n * Returns the index of the first occurrence of a value in an array. This helper exists to avoid adding a polyfil for older browsers that do not define Array.prototype.xxxx (eg. ES3 only, IE8) just in case any page checks for presence/absence of the prototype implementation. Note: For consistency this will not use the Array.prototype.xxxx implementation if it exists as this would cause a testing requirement to test with and without the implementations\n *\n * @param searchElement - The value to locate in the array.\n *\n * @param fromIndex - The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "arrIndexOf: "
                },
                {
                  "kind": "Content",
                  "text": "<T>(arr: T[], searchElement: T, fromIndex?: number) => number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "arrIndexOf",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ICoreUtils#arrMap:member",
              "docComment": "/**\n * Calls a defined callback function on each element of an array, and returns an array that contains the results. This helper exists to avoid adding a polyfil for older browsers that do not define Array.prototype.xxxx (eg. ES3 only, IE8) just in case any page checks for presence/absence of the prototype implementation. Note: For consistency this will not use the Array.prototype.xxxx implementation if it exists as this would cause a testing requirement to test with and without the implementations\n *\n * @param callbackfn - A function that accepts up to three arguments. The map method calls the callbackfn function one time for each element in the array.\n *\n * @param thisArg - An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "arrMap: "
                },
                {
                  "kind": "Content",
                  "text": "<T, R>(arr: T[], callbackfn: (value: T, index?: number, array?: T[]) => R, thisArg?: any) => R[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "arrMap",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ICoreUtils#arrReduce:member",
              "docComment": "/**\n * Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function. This helper exists to avoid adding a polyfil for older browsers that do not define Array.prototype.xxxx (eg. ES3 only, IE8) just in case any page checks for presence/absence of the prototype implementation. Note: For consistency this will not use the Array.prototype.xxxx implementation if it exists as this would cause a testing requirement to test with and without the implementations\n *\n * @param callbackfn - A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\n *\n * @param initialValue - If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "arrReduce: "
                },
                {
                  "kind": "Content",
                  "text": "<T, R>(arr: T[], callbackfn: (previousValue: T | R, currentValue?: T, currentIndex?: number, array?: T[]) => R, initialValue?: R) => R"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "arrReduce",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ICoreUtils#dateNow:member",
              "docComment": "/**\n * Return the current time via the Date now() function (if available) and falls back to (new Date()).getTime() if now() is unavailable (IE8 or less) https://caniuse.com/#search=Date.now\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dateNow: "
                },
                {
                  "kind": "Content",
                  "text": "() => number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "dateNow",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ICoreUtils#disableCookies:member",
              "docComment": "/**\n * @deprecated\n *\n * - Use the core.getCookieMgr().disable() Force the SDK not to store and read any data from cookies.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "disableCookies: "
                },
                {
                  "kind": "Content",
                  "text": "() => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "disableCookies",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ICoreUtils#generateW3CId:member",
              "docComment": "/**\n * generate W3C trace id\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "generateW3CId: "
                },
                {
                  "kind": "Content",
                  "text": "() => string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "generateW3CId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ICoreUtils#hasOwnProperty:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hasOwnProperty: "
                },
                {
                  "kind": "Content",
                  "text": "(obj: any, prop: string) => boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "hasOwnProperty",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ICoreUtils#isArray:member",
              "docComment": "/**\n * Check if an object is of type Array\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isArray: "
                },
                {
                  "kind": "Content",
                  "text": "(obj: any) => boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isArray",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ICoreUtils#isBoolean:member",
              "docComment": "/**\n * Checks if the type of value is a boolean.\n *\n * @param value - Value to be checked.  @return {boolean} True if the value is a boolean, false otherwise.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isBoolean: "
                },
                {
                  "kind": "Content",
                  "text": "(value: any) => "
                },
                {
                  "kind": "Reference",
                  "text": "value",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!~value"
                },
                {
                  "kind": "Content",
                  "text": " is boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isBoolean",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ICoreUtils#isDate:member",
              "docComment": "/**\n * Check if an object is of type Date\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isDate: "
                },
                {
                  "kind": "Content",
                  "text": "(obj: any) => "
                },
                {
                  "kind": "Reference",
                  "text": "obj",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!~obj"
                },
                {
                  "kind": "Content",
                  "text": " is "
                },
                {
                  "kind": "Reference",
                  "text": "Date",
                  "canonicalReference": "!Date:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isDate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ICoreUtils#isError:member",
              "docComment": "/**\n * Check if an object is of type Error\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isError: "
                },
                {
                  "kind": "Content",
                  "text": "(obj: any) => "
                },
                {
                  "kind": "Reference",
                  "text": "obj",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!~obj"
                },
                {
                  "kind": "Content",
                  "text": " is "
                },
                {
                  "kind": "Reference",
                  "text": "Error",
                  "canonicalReference": "!Error:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isError",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ICoreUtils#isFunction:member",
              "docComment": "/**\n * Checks if the passed of value is a function.\n *\n * @param value - Value to be checked.  @return {boolean} True if the value is a boolean, false otherwise.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isFunction: "
                },
                {
                  "kind": "Content",
                  "text": "(value: any) => "
                },
                {
                  "kind": "Reference",
                  "text": "value",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!~value"
                },
                {
                  "kind": "Content",
                  "text": " is "
                },
                {
                  "kind": "Reference",
                  "text": "Function",
                  "canonicalReference": "!Function:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isFunction",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ICoreUtils#isIE:member",
              "docComment": "/**\n * Identifies whether the current environment appears to be IE\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isIE: "
                },
                {
                  "kind": "Content",
                  "text": "() => boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isIE",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ICoreUtils#isNullOrUndefined:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isNullOrUndefined: "
                },
                {
                  "kind": "Content",
                  "text": "(value: any) => boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isNullOrUndefined",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ICoreUtils#isNumber:member",
              "docComment": "/**\n * Checks if the type of value is a number.\n *\n * @param value - Value to be checked.  @return {boolean} True if the value is a number, false otherwise.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isNumber: "
                },
                {
                  "kind": "Content",
                  "text": "(value: any) => "
                },
                {
                  "kind": "Reference",
                  "text": "value",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!~value"
                },
                {
                  "kind": "Content",
                  "text": " is number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isNumber",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ICoreUtils#isObject:member",
              "docComment": "/**\n * Checks if the passed of value is a function.\n *\n * @param value - Value to be checked.  @return {boolean} True if the value is a boolean, false otherwise.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isObject: "
                },
                {
                  "kind": "Content",
                  "text": "(value: any) => boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isObject",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ICoreUtils#isString:member",
              "docComment": "/**\n * Checks if the type of value is a string.\n *\n * @param value - Value to be checked.  @return {boolean} True if the value is a string, false otherwise.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isString: "
                },
                {
                  "kind": "Content",
                  "text": "(value: any) => "
                },
                {
                  "kind": "Reference",
                  "text": "value",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!~value"
                },
                {
                  "kind": "Content",
                  "text": " is string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isString",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ICoreUtils#isTypeof:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isTypeof: "
                },
                {
                  "kind": "Content",
                  "text": "(value: any, theType: string) => boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isTypeof",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ICoreUtils#isUndefined:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isUndefined: "
                },
                {
                  "kind": "Content",
                  "text": "(value: any) => boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isUndefined",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ICoreUtils#mwcRandom32:member",
              "docComment": "/**\n * Generate a random 32-bit number between (0x000000..0xFFFFFFFF) or (-0x80000000..0x7FFFFFFF), using MWC (Multiply with carry) instead of Math.random() defaults to un-signed. Used as a replacement random generator for IE to avoid issues with older IE instances.\n *\n * @param signed - True to return a signed 32-bit number (-0x80000000..0x7FFFFFFF) otherwise an unsigned one (0x000000..0xFFFFFFFF)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mwcRandom32: "
                },
                {
                  "kind": "Content",
                  "text": "(signed?: boolean) => number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "mwcRandom32",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ICoreUtils#mwcRandomSeed:member",
              "docComment": "/**\n * Seed the MWC random number generator with the specified seed or a random value\n *\n * @param value - optional the number to used as the seed, if undefined, null or zero a random value will be chosen\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mwcRandomSeed: "
                },
                {
                  "kind": "Content",
                  "text": "(value?: number) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "mwcRandomSeed",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ICoreUtils#newGuid:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "newGuid: "
                },
                {
                  "kind": "Content",
                  "text": "() => string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "newGuid",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ICoreUtils#newId:member",
              "docComment": "/**\n * Generate random base64 id string. The default length is 22 which is 132-bits so almost the same as a GUID but as base64 (the previous default was 5)\n *\n * @param maxLength - Optional value to specify the length of the id to be generated, defaults to 22\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "newId: "
                },
                {
                  "kind": "Content",
                  "text": "(maxLength?: number) => string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "newId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ICoreUtils#objCreate:member",
              "docComment": "/**\n * Creates an object that has the specified prototype, and that optionally contains specified properties. This helper exists to avoid adding a polyfil for older browsers that do not define Object.create eg. ES3 only, IE8 just in case any page checks for presence/absence of the prototype implementation. Note: For consistency this will not use the Object.create implementation if it exists as this would cause a testing requirement to test with and without the implementations\n *\n * @param obj - Object to use as a prototype. May be null\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "objCreate: "
                },
                {
                  "kind": "Content",
                  "text": "(obj: object) => any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "objCreate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ICoreUtils#objDefineAccessors:member",
              "docComment": "/**\n * Try to define get/set object property accessors for the target object/prototype, this will provide compatibility with existing API definition when run within an ES5+ container that supports accessors but still enable the code to be loaded and executed in an ES3 container, providing basic IE8 compatibility.\n *\n * @param target - The object on which to define the property.\n *\n * @param prop - The name of the property to be defined or modified.\n *\n * @param getProp - The getter function to wire against the getter.\n *\n * @param setProp - The setter function to wire against the setter.\n *\n * @returns True if it was able to create the accessors otherwise false\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "objDefineAccessors: "
                },
                {
                  "kind": "Content",
                  "text": "<T>(target: any, prop: string, getProp?: () => T, setProp?: (v: T) => void) => boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "objDefineAccessors",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ICoreUtils#objKeys:member",
              "docComment": "/**\n * Returns the names of the enumerable string properties and methods of an object. This helper exists to avoid adding a polyfil for older browsers that do not define Object.keys eg. ES3 only, IE8 just in case any page checks for presence/absence of the prototype implementation. Note: For consistency this will not use the Object.keys implementation if it exists as this would cause a testing requirement to test with and without the implementations\n *\n * @param obj - Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "objKeys: "
                },
                {
                  "kind": "Content",
                  "text": "(obj: {}) => string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "objKeys",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ICoreUtils#perfNow:member",
              "docComment": "/**\n * Return the current value of the Performance Api now() function (if available) and fallback to dateNow() if it is unavailable (IE9 or less) https://caniuse.com/#search=performance.now\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "perfNow: "
                },
                {
                  "kind": "Content",
                  "text": "() => number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "perfNow",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ICoreUtils#random32:member",
              "docComment": "/**\n * generate a random 32-bit number (0x000000..0xFFFFFFFF) or (-0x80000000..0x7FFFFFFF), defaults un-unsigned.\n *\n * @param signed - True to return a signed 32-bit number (-0x80000000..0x7FFFFFFF) otherwise an unsigned one (0x000000..0xFFFFFFFF)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "random32: "
                },
                {
                  "kind": "Content",
                  "text": "(signed?: boolean) => number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "random32",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ICoreUtils#randomValue:member",
              "docComment": "/**\n * Generate a random value between 0 and maxValue, max value should be limited to a 32-bit maximum. So maxValue(16) will produce a number from 0..16 (range of 17)\n *\n * @param maxValue - \n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "randomValue: "
                },
                {
                  "kind": "Content",
                  "text": "(maxValue: number) => number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "randomValue",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ICoreUtils#strTrim:member",
              "docComment": "/**\n * helper method to trim strings (IE8 does not implement String.prototype.trim)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "strTrim: "
                },
                {
                  "kind": "Content",
                  "text": "(str: any) => string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "strTrim",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ICoreUtils#toISOString:member",
              "docComment": "/**\n * Convert a date to I.S.O. format in IE8\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toISOString: "
                },
                {
                  "kind": "Content",
                  "text": "(date: "
                },
                {
                  "kind": "Reference",
                  "text": "Date",
                  "canonicalReference": "!Date:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "toISOString",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@microsoft/applicationinsights-core-js!ICustomProperties:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ICustomProperties "
            }
          ],
          "releaseTag": "Public",
          "name": "ICustomProperties",
          "members": [
            {
              "kind": "IndexSignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ICustomProperties:index(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "[key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "]: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@microsoft/applicationinsights-core-js!IDiagnosticLogger:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDiagnosticLogger "
            }
          ],
          "releaseTag": "Public",
          "name": "IDiagnosticLogger",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IDiagnosticLogger#consoleLoggingLevel:member",
              "docComment": "/**\n * 0: OFF 1: only critical (default) 2: critical + info\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "consoleLoggingLevel: "
                },
                {
                  "kind": "Content",
                  "text": "() => number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "consoleLoggingLevel",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IDiagnosticLogger#enableDebugExceptions:member",
              "docComment": "/**\n * When this is true the SDK will throw exceptions to aid in debugging.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enableDebugExceptions: "
                },
                {
                  "kind": "Content",
                  "text": "() => boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "enableDebugExceptions",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IDiagnosticLogger#logInternalMessage:member(1)",
              "docComment": "/**\n * Logs a message to the internal queue.\n *\n * @param severity - The severity of the log message\n *\n * @param message - The message to log.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "logInternalMessage?(severity: "
                },
                {
                  "kind": "Reference",
                  "text": "LoggingSeverity",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!LoggingSeverity:enum"
                },
                {
                  "kind": "Content",
                  "text": ", message: "
                },
                {
                  "kind": "Reference",
                  "text": "_InternalLogMessage",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!_InternalLogMessage:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "severity",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "message",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "logInternalMessage"
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IDiagnosticLogger#maxInternalMessageLimit:member",
              "docComment": "/**\n * The maximum number of internal messages allowed to be sent per page view\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "maxInternalMessageLimit: "
                },
                {
                  "kind": "Content",
                  "text": "() => number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "maxInternalMessageLimit",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IDiagnosticLogger#queue:member",
              "docComment": "/**\n * The internal logging queue\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "queue: "
                },
                {
                  "kind": "Reference",
                  "text": "_InternalLogMessage",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!_InternalLogMessage:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "queue",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IDiagnosticLogger#resetInternalMessageCount:member(1)",
              "docComment": "/**\n * Resets the internal message count\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "resetInternalMessageCount(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "resetInternalMessageCount"
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IDiagnosticLogger#telemetryLoggingLevel:member",
              "docComment": "/**\n * 0: OFF (default) 1: CRITICAL 2: WARNING\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "telemetryLoggingLevel: "
                },
                {
                  "kind": "Content",
                  "text": "() => number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "telemetryLoggingLevel",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IDiagnosticLogger#throwInternal:member(1)",
              "docComment": "/**\n * This method will throw exceptions in debug mode or attempt to log the error as a console warning.\n *\n * @param severity - The severity of the log message\n *\n * @param message - The log message.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "throwInternal(severity: "
                },
                {
                  "kind": "Reference",
                  "text": "LoggingSeverity",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!LoggingSeverity:enum"
                },
                {
                  "kind": "Content",
                  "text": ", msgId: "
                },
                {
                  "kind": "Reference",
                  "text": "_InternalMessageId",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!_InternalMessageId:type"
                },
                {
                  "kind": "Content",
                  "text": ", msg: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", properties?: "
                },
                {
                  "kind": "Reference",
                  "text": "Object",
                  "canonicalReference": "!Object:interface"
                },
                {
                  "kind": "Content",
                  "text": ", isUserAct?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "severity",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "msgId",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "msg",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                },
                {
                  "parameterName": "properties",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  }
                },
                {
                  "parameterName": "isUserAct",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  }
                }
              ],
              "name": "throwInternal"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IDiagnosticLogger#warnToConsole:member(1)",
              "docComment": "/**\n * This will write a warning to the console if possible\n *\n * @param message - The warning message\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "warnToConsole(message: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "message",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "warnToConsole"
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@microsoft/applicationinsights-core-js!IEventHelper:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IEventHelper "
            }
          ],
          "releaseTag": "Public",
          "name": "IEventHelper",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IEventHelper#Attach:member",
              "docComment": "/**\n * Binds the specified function to an event, so that the function gets called whenever the event fires on the object\n *\n * @param obj - Object to add the event too.\n *\n * @param eventNameWithoutOn - String that specifies any of the standard DHTML Events without \"on\" prefix\n *\n * @param handlerRef - Pointer that specifies the function to call when event fires\n *\n * @returns True if the function was bound successfully to the event, otherwise false\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Attach: "
                },
                {
                  "kind": "Content",
                  "text": "(obj: any, eventNameWithoutOn: string, handlerRef: any) => boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "Attach",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IEventHelper#AttachEvent:member",
              "docComment": "/**\n * Binds the specified function to an event, so that the function gets called whenever the event fires on the object\n *\n * @deprecated\n *\n * Use {@link EventHelper#Attach} as we are already in a class call EventHelper the extra \"Event\" just causes a larger result\n *\n * @param obj - Object to add the event too.\n *\n * @param eventNameWithoutOn - String that specifies any of the standard DHTML Events without \"on\" prefix\n *\n * @param handlerRef - Pointer that specifies the function to call when event fires\n *\n * @returns True if the function was bound successfully to the event, otherwise false\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "AttachEvent: "
                },
                {
                  "kind": "Content",
                  "text": "(obj: any, eventNameWithoutOn: string, handlerRef: any) => boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "AttachEvent",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IEventHelper#Detach:member",
              "docComment": "/**\n * Removes an event handler for the specified event\n *\n * @param eventName - The name of the event\n *\n * @param callback - The callback function that needs to be executed for the given event  @return {boolean} - true if the handler was successfully added\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Detach: "
                },
                {
                  "kind": "Content",
                  "text": "(obj: any, eventNameWithoutOn: string, handlerRef: any) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "Detach",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IEventHelper#DetachEvent:member",
              "docComment": "/**\n * Removes an event handler for the specified event\n *\n * @deprecated\n *\n * Use {@link EventHelper#Detach} as we are already in a class call EventHelper the extra \"Event\" just causes a larger result\n *\n * @param eventName - The name of the event\n *\n * @param callback - The callback function that needs to be executed for the given event  @return {boolean} - true if the handler was successfully added\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DetachEvent: "
                },
                {
                  "kind": "Content",
                  "text": "(obj: any, eventNameWithoutOn: string, handlerRef: any) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "DetachEvent",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@microsoft/applicationinsights-core-js!IInstrumentCallDetails:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IInstrumentCallDetails "
            }
          ],
          "releaseTag": "Public",
          "name": "IInstrumentCallDetails",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IInstrumentCallDetails#ctx:member",
              "docComment": "/**\n * This returns an object that the hook function can use to store hook specific context, it it not shared with any other hook instances and is unique for the current call. A hook implementation can use this to pass / share context between different hook callbacks eg. request/response requst/hookErrors etc.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ctx: "
                },
                {
                  "kind": "Content",
                  "text": "() => any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ctx",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IInstrumentCallDetails#err:member",
              "docComment": "/**\n * The error (exception) which occurred while executing the original method\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "err?: "
                },
                {
                  "kind": "Reference",
                  "text": "Error",
                  "canonicalReference": "!Error:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "err",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IInstrumentCallDetails#inst:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "inst: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "inst",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IInstrumentCallDetails#name:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IInstrumentCallDetails#rslt:member",
              "docComment": "/**\n * The result of the original method, only populated after the original method has returned\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "rslt?: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "rslt",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IInstrumentCallDetails#set:member",
              "docComment": "/**\n * Allows the hook functions to replace the original arguments\n *\n * @param idx - The argument index (0 based)\n *\n * @param value - The new value for the argument\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "set: "
                },
                {
                  "kind": "Content",
                  "text": "(idx: number, value: any) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "set",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@microsoft/applicationinsights-core-js!IInstrumentHook:interface",
          "docComment": "/**\n * The holder of the specific instance callback\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IInstrumentHook "
            }
          ],
          "releaseTag": "Public",
          "name": "IInstrumentHook",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IInstrumentHook#cbks:member",
              "docComment": "/**\n * Holds the callbacks\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "cbks: "
                },
                {
                  "kind": "Reference",
                  "text": "IInstrumentHooksCallbacks",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IInstrumentHooksCallbacks:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "cbks",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IInstrumentHook#id:member",
              "docComment": "/**\n * Unique Id for this callback on the hooked method\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "id: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "id",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IInstrumentHook#rm:member",
              "docComment": "/**\n * Remove this hook from the function\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "rm: "
                },
                {
                  "kind": "Content",
                  "text": "() => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "rm",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@microsoft/applicationinsights-core-js!IInstrumentHooks:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IInstrumentHooks "
            }
          ],
          "releaseTag": "Public",
          "name": "IInstrumentHooks",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IInstrumentHooks#f:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "f: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "f",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IInstrumentHooks#h:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "h: "
                },
                {
                  "kind": "Reference",
                  "text": "IInstrumentHook",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IInstrumentHook:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "h",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IInstrumentHooks#i:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "i: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "i",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IInstrumentHooks#n:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "n: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "n",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@microsoft/applicationinsights-core-js!IInstrumentHooksCallbacks:interface",
          "docComment": "/**\n * The callbacks to call for the instrumented function, you must provide at least the request and/or response callbacks, both are not required. You must always supply the error callback\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IInstrumentHooksCallbacks "
            }
          ],
          "releaseTag": "Public",
          "name": "IInstrumentHooksCallbacks",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IInstrumentHooksCallbacks#fnErr:member",
              "docComment": "/**\n * The callback to call if the original function causes an exception, even if you supply a callback the original exception will still be thrown\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "fnErr?: "
                },
                {
                  "kind": "Reference",
                  "text": "InstrumentorHooksCallback",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!InstrumentorHooksCallback:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "fnErr",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IInstrumentHooksCallbacks#hkErr:member",
              "docComment": "/**\n * The callback to call if the hook function causes an exception\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hkErr?: "
                },
                {
                  "kind": "Reference",
                  "text": "InstrumentorHooksCallback",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!InstrumentorHooksCallback:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "hkErr",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IInstrumentHooksCallbacks#req:member",
              "docComment": "/**\n * The hook callback to call before the original function is called\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "req?: "
                },
                {
                  "kind": "Reference",
                  "text": "InstrumentorHooksCallback",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!InstrumentorHooksCallback:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "req",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IInstrumentHooksCallbacks#rsp:member",
              "docComment": "/**\n * The hook callback to call after the original function was called\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "rsp?: "
                },
                {
                  "kind": "Reference",
                  "text": "InstrumentorHooksCallback",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!InstrumentorHooksCallback:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "rsp",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!initializePlugins:function(1)",
          "docComment": "/**\n * Initialize the queue of plugins\n *\n * @param plugins - The array of plugins to initialize and setting of the next plugin\n *\n * @param config - The current config for the instance\n *\n * @param core - THe current core instance\n *\n * @param extensions - The extensions\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function initializePlugins(processContext: "
            },
            {
              "kind": "Reference",
              "text": "ProcessTelemetryContext",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ProcessTelemetryContext:class"
            },
            {
              "kind": "Content",
              "text": ", extensions: "
            },
            {
              "kind": "Reference",
              "text": "IPlugin",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IPlugin:interface"
            },
            {
              "kind": "Content",
              "text": "[]"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 6,
            "endIndex": 7
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "processContext",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "extensions",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              }
            }
          ],
          "name": "initializePlugins"
        },
        {
          "kind": "Interface",
          "canonicalReference": "@microsoft/applicationinsights-core-js!INotificationListener:interface",
          "docComment": "/**\n * An interface used for the notification listener.  @interface\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface INotificationListener "
            }
          ],
          "releaseTag": "Public",
          "name": "INotificationListener",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!INotificationListener#eventsDiscarded:member",
              "docComment": "/**\n * [Optional] A function called when events are discarded.\n *\n * @param events - The array of events that have been discarded.\n *\n * @param reason - The reason for discarding the events. The EventsDiscardedReason constant should be used to check the different values.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "eventsDiscarded?: "
                },
                {
                  "kind": "Content",
                  "text": "(events: "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryItem",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!ITelemetryItem:interface"
                },
                {
                  "kind": "Content",
                  "text": "[], reason: number) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "eventsDiscarded",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!INotificationListener#eventsSendRequest:member",
              "docComment": "/**\n * [Optional] A function called when the events have been requested to be sent to the sever.\n *\n * @param sendReason - The reason why the event batch is being sent.\n *\n * @param isAsync - A flag which identifies whether the requests are being sent in an async or sync manner.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "eventsSendRequest?: "
                },
                {
                  "kind": "Content",
                  "text": "(sendReason: number, isAsync?: boolean) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "eventsSendRequest",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!INotificationListener#eventsSent:member",
              "docComment": "/**\n * [Optional] A function called when events are sent.\n *\n * @param events - The array of events that have been sent.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "eventsSent?: "
                },
                {
                  "kind": "Content",
                  "text": "(events: "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryItem",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!ITelemetryItem:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "eventsSent",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!INotificationListener#perfEvent:member",
              "docComment": "/**\n * [Optional] This event is sent if you have enabled perf events, they are primarily used to track internal performance testing and debugging the event can be displayed via the debug plugin extension.\n *\n * @param perfEvent - \n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "perfEvent?: "
                },
                {
                  "kind": "Content",
                  "text": "(perfEvent: "
                },
                {
                  "kind": "Reference",
                  "text": "IPerfEvent",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IPerfEvent:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "perfEvent",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@microsoft/applicationinsights-core-js!INotificationManager:interface",
          "docComment": "/**\n * Class to manage sending notifications to all the listeners.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface INotificationManager "
            }
          ],
          "releaseTag": "Public",
          "name": "INotificationManager",
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!INotificationManager#addNotificationListener:member(1)",
              "docComment": "/**\n * Adds a notification listener.\n *\n * @param listener - The notification listener to be added.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addNotificationListener(listener: "
                },
                {
                  "kind": "Reference",
                  "text": "INotificationListener",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!INotificationListener:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "listener",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "addNotificationListener"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!INotificationManager#eventsDiscarded:member(1)",
              "docComment": "/**\n * Notification for events being discarded.\n *\n * @param events - The array of events that have been discarded by the SDK.\n *\n * @param reason - The reason for which the SDK discarded the events. The EventsDiscardedReason constant should be used to check the different values.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "eventsDiscarded(events: "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryItem",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!ITelemetryItem:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ", reason: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "events",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                },
                {
                  "parameterName": "reason",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  }
                }
              ],
              "name": "eventsDiscarded"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!INotificationManager#eventsSendRequest:member(1)",
              "docComment": "/**\n * [Optional] A function called when the events have been requested to be sent to the sever.\n *\n * @param sendReason - The reason why the event batch is being sent.\n *\n * @param isAsync - A flag which identifies whether the requests are being sent in an async or sync manner.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "eventsSendRequest?(sendReason: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", isAsync: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "sendReason",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "isAsync",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "eventsSendRequest"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!INotificationManager#eventsSent:member(1)",
              "docComment": "/**\n * Notification for events sent.\n *\n * @param events - The array of events that have been sent.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "eventsSent(events: "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryItem",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!ITelemetryItem:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "events",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                }
              ],
              "name": "eventsSent"
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!INotificationManager#listeners:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "listeners: "
                },
                {
                  "kind": "Reference",
                  "text": "INotificationListener",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!INotificationListener:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "listeners",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!INotificationManager#perfEvent:member(1)",
              "docComment": "/**\n * [Optional] This event is sent if you have enabled perf events, they are primarily used to track internal performance testing and debugging the event can be displayed via the debug plugin extension.\n *\n * @param perfEvent - \n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "perfEvent?(perfEvent: "
                },
                {
                  "kind": "Reference",
                  "text": "IPerfEvent",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IPerfEvent:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "perfEvent",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "perfEvent"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!INotificationManager#removeNotificationListener:member(1)",
              "docComment": "/**\n * Removes all instances of the listener.\n *\n * @param listener - AWTNotificationListener to remove.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "removeNotificationListener(listener: "
                },
                {
                  "kind": "Reference",
                  "text": "INotificationListener",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!INotificationListener:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "listener",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "removeNotificationListener"
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!InstrumentFunc:function(1)",
          "docComment": "/**\n * Intercept the named prototype functions for the target class / object\n *\n * @param target - The target object\n *\n * @param funcName - The function name\n *\n * @param callbacks - The callbacks to configure and call whenever the function is called\n *\n * @param checkPrototype - If the function doesn't exist on the target should it attempt to hook the prototype function\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function InstrumentFunc(target: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ", funcName: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", callbacks: "
            },
            {
              "kind": "Reference",
              "text": "IInstrumentHooksCallbacks",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IInstrumentHooksCallbacks:interface"
            },
            {
              "kind": "Content",
              "text": ", checkPrototype?: "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "IInstrumentHook",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IInstrumentHook:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 9,
            "endIndex": 10
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "target",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "funcName",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            },
            {
              "parameterName": "callbacks",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              }
            },
            {
              "parameterName": "checkPrototype",
              "parameterTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              }
            }
          ],
          "name": "InstrumentFunc"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!InstrumentFuncs:function(1)",
          "docComment": "/**\n * Intercept the named functions for the target class / object\n *\n * @param target - The target object\n *\n * @param funcNames - The function names to intercept and call\n *\n * @param callbacks - The callbacks to configure and call whenever the function is called\n *\n * @param checkPrototype - If the function doesn't exist on the target should it attempt to hook the prototype function\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function InstrumentFuncs(target: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ", funcNames: "
            },
            {
              "kind": "Content",
              "text": "string[]"
            },
            {
              "kind": "Content",
              "text": ", callbacks: "
            },
            {
              "kind": "Reference",
              "text": "IInstrumentHooksCallbacks",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IInstrumentHooksCallbacks:interface"
            },
            {
              "kind": "Content",
              "text": ", checkPrototype?: "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "IInstrumentHook",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IInstrumentHook:interface"
            },
            {
              "kind": "Content",
              "text": "[]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 9,
            "endIndex": 11
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "target",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "funcNames",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            },
            {
              "parameterName": "callbacks",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              }
            },
            {
              "parameterName": "checkPrototype",
              "parameterTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              }
            }
          ],
          "name": "InstrumentFuncs"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@microsoft/applicationinsights-core-js!InstrumentorHooksCallback:type",
          "docComment": "/**\n * A callback function that will be called for the wrapped instrumentation function before the original function is executed.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type InstrumentorHooksCallback = "
            },
            {
              "kind": "Content",
              "text": "(funcArgs: "
            },
            {
              "kind": "Reference",
              "text": "IInstrumentCallDetails",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IInstrumentCallDetails:interface"
            },
            {
              "kind": "Content",
              "text": ", ...orgArgs: any[]) => void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "InstrumentorHooksCallback",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!InstrumentProto:function(1)",
          "docComment": "/**\n * Intercept the named prototype functions for the target class / object\n *\n * @param target - The target object\n *\n * @param funcName - The function name\n *\n * @param callbacks - The callbacks to configure and call whenever the function is called\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function InstrumentProto(target: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ", funcName: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", callbacks: "
            },
            {
              "kind": "Reference",
              "text": "IInstrumentHooksCallbacks",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IInstrumentHooksCallbacks:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "IInstrumentHook",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IInstrumentHook:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "target",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "funcName",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            },
            {
              "parameterName": "callbacks",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              }
            }
          ],
          "name": "InstrumentProto"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!InstrumentProtos:function(1)",
          "docComment": "/**\n * Intercept the named prototype functions for the target class / object\n *\n * @param target - The target object\n *\n * @param funcNames - The function names to intercept and call\n *\n * @param callbacks - The callbacks to configure and call whenever the function is called\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function InstrumentProtos(target: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ", funcNames: "
            },
            {
              "kind": "Content",
              "text": "string[]"
            },
            {
              "kind": "Content",
              "text": ", callbacks: "
            },
            {
              "kind": "Reference",
              "text": "IInstrumentHooksCallbacks",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IInstrumentHooksCallbacks:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "IInstrumentHook",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IInstrumentHook:interface"
            },
            {
              "kind": "Content",
              "text": "[]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 9
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "target",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "funcNames",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            },
            {
              "parameterName": "callbacks",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              }
            }
          ],
          "name": "InstrumentProtos"
        },
        {
          "kind": "Interface",
          "canonicalReference": "@microsoft/applicationinsights-core-js!IPerfEvent:interface",
          "docComment": "/**\n * This interface identifies the details of an internal performance event - it does not represent an outgoing reported event\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IPerfEvent "
            }
          ],
          "releaseTag": "Public",
          "name": "IPerfEvent",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IPerfEvent#childEvts:member",
              "docComment": "/**\n * The child perf events that are contained within the total time of this event.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "childEvts?: "
                },
                {
                  "kind": "Reference",
                  "text": "IPerfEvent",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IPerfEvent:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "childEvts",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IPerfEvent#complete:member",
              "docComment": "/**\n * Mark this event as completed, calculating the total execution time.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "complete: "
                },
                {
                  "kind": "Content",
                  "text": "() => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "complete",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IPerfEvent#exTime:member",
              "docComment": "/**\n * Identifies the exclusive time spent in for this event (not including child events), this will be undefined until the event is completed.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "exTime?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "exTime",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IPerfEvent#getCtx:member",
              "docComment": "/**\n * Get the names additional context associated with this perf event\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getCtx?: "
                },
                {
                  "kind": "Content",
                  "text": "(key: string) => any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "getCtx",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IPerfEvent#isAsync:member",
              "docComment": "/**\n * Is this occurring from an asynchronous event\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isAsync: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isAsync",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IPerfEvent#isChildEvt:member",
              "docComment": "/**\n * Identifies whether this event is a child event of a parent\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isChildEvt: "
                },
                {
                  "kind": "Content",
                  "text": "() => boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isChildEvt",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IPerfEvent#name:member",
              "docComment": "/**\n * The name of the performance event\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IPerfEvent#parent:member",
              "docComment": "/**\n * The Parent event that was started before this event was created\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "parent?: "
                },
                {
                  "kind": "Reference",
                  "text": "IPerfEvent",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IPerfEvent:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "parent",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IPerfEvent#payload:member",
              "docComment": "/**\n * The payload (contents) of the perfEvent, may be null or only set after the event has completed depending on the runtime environment.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "payload: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "payload",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IPerfEvent#setCtx:member",
              "docComment": "/**\n * Set the named additional context to be associated with this perf event, this will replace any existing value\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setCtx?: "
                },
                {
                  "kind": "Content",
                  "text": "(key: string, value: any) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "setCtx",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IPerfEvent#start:member",
              "docComment": "/**\n * The start time of the performance event\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "start: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "start",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IPerfEvent#time:member",
              "docComment": "/**\n * Identifies the total inclusive time spent for this event, including the time spent for child events, this will be undefined until the event is completed\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "time?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "time",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@microsoft/applicationinsights-core-js!IPerfManager:interface",
          "docComment": "/**\n * This defines an internal performance manager for tracking and reporting the internal performance of the SDK -- It does not represent or report any event to the server.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IPerfManager "
            }
          ],
          "releaseTag": "Public",
          "name": "IPerfManager",
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IPerfManager#create:member(1)",
              "docComment": "/**\n * Create a new event and start timing, the manager may return null/undefined to indicate that it does not want to monitor this source event.\n *\n * @param src - The source name of the event\n *\n * @param payloadDetails - An optional callback function to fetch the payload details for the event.\n *\n * @param isAsync - Is the event occurring from a async event\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "create(src: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", payloadDetails?: "
                },
                {
                  "kind": "Content",
                  "text": "() => any"
                },
                {
                  "kind": "Content",
                  "text": ", isAsync?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "IPerfEvent",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IPerfEvent:interface"
                },
                {
                  "kind": "Content",
                  "text": " | null | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "src",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "payloadDetails",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "isAsync",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "create"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IPerfManager#fire:member(1)",
              "docComment": "/**\n * Complete the perfEvent and fire any notifications.\n *\n * @param perfEvent - Fire the event which will also complete the passed event\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "fire(perfEvent: "
                },
                {
                  "kind": "Reference",
                  "text": "IPerfEvent",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IPerfEvent:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "perfEvent",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "fire"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IPerfManager#getCtx:member(1)",
              "docComment": "/**\n * Get the execution context value\n *\n * @param key - The context key\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getCtx(key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "getCtx"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IPerfManager#setCtx:member(1)",
              "docComment": "/**\n * Set an execution context value\n *\n * @param key - The context key name\n *\n * @param value - The value\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setCtx(key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", value: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "setCtx"
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@microsoft/applicationinsights-core-js!IPerfManagerProvider:interface",
          "docComment": "/**\n * Identifies an interface to a host that can provide an IPerfManager implementation\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IPerfManagerProvider "
            }
          ],
          "releaseTag": "Public",
          "name": "IPerfManagerProvider",
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IPerfManagerProvider#getPerfMgr:member(1)",
              "docComment": "/**\n * Get the current performance manager\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getPerfMgr(): "
                },
                {
                  "kind": "Reference",
                  "text": "IPerfManager",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IPerfManager:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "getPerfMgr"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IPerfManagerProvider#setPerfMgr:member(1)",
              "docComment": "/**\n * Set the current performance manager\n *\n * @param perfMgr - The performance manager\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setPerfMgr(perfMgr: "
                },
                {
                  "kind": "Reference",
                  "text": "IPerfManager",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IPerfManager:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "perfMgr",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "setPerfMgr"
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@microsoft/applicationinsights-core-js!IPlugin:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IPlugin "
            }
          ],
          "releaseTag": "Public",
          "name": "IPlugin",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IPlugin#identifier:member",
              "docComment": "/**\n * Extension name\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly identifier: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "identifier",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IPlugin#initialize:member",
              "docComment": "/**\n * Initialize plugin loaded by SDK\n *\n * @param config - The config for the plugin to use\n *\n * @param core - The current App Insights core to use for initializing this plugin instance\n *\n * @param extensions - The complete set of extensions to be used for initializing the plugin\n *\n * @param pluginChain - [Optional] specifies the current plugin chain which identifies the set of plugins and the order they should be executed for the current request.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "initialize: "
                },
                {
                  "kind": "Content",
                  "text": "(config: "
                },
                {
                  "kind": "Reference",
                  "text": "IConfiguration",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IConfiguration:interface"
                },
                {
                  "kind": "Content",
                  "text": ", core: "
                },
                {
                  "kind": "Reference",
                  "text": "IAppInsightsCore",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IAppInsightsCore:interface"
                },
                {
                  "kind": "Content",
                  "text": ", extensions: "
                },
                {
                  "kind": "Reference",
                  "text": "IPlugin",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IPlugin:interface"
                },
                {
                  "kind": "Content",
                  "text": "[], pluginChain?: "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryPluginChain",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!ITelemetryPluginChain:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "initialize",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 10
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IPlugin#isInitialized:member",
              "docComment": "/**\n * Returns a value that indicates whether the plugin has already been previously initialized. New plugins should implement this method to avoid being initialized more than once.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isInitialized?: "
                },
                {
                  "kind": "Content",
                  "text": "() => boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "isInitialized",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IPlugin#teardown:member",
              "docComment": "/**\n * Tear down the plugin and remove any hooked value, the plugin should remove that it is no longer initialized and therefore can be re-initialized after being torn down.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "teardown?: "
                },
                {
                  "kind": "Content",
                  "text": "() => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "teardown",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IPlugin#version:member",
              "docComment": "/**\n * Plugin version (available in data.properties.version in common schema)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly version?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "version",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@microsoft/applicationinsights-core-js!IProcessTelemetryContext:interface",
          "docComment": "/**\n * The current context for the current call to processTelemetry(), used to support sharing the same plugin instance between multiple AppInsights instances\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IProcessTelemetryContext "
            }
          ],
          "releaseTag": "Public",
          "name": "IProcessTelemetryContext",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IProcessTelemetryContext#core:member",
              "docComment": "/**\n * The current core instance for the request\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "core: "
                },
                {
                  "kind": "Content",
                  "text": "() => "
                },
                {
                  "kind": "Reference",
                  "text": "IAppInsightsCore",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IAppInsightsCore:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "core",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IProcessTelemetryContext#createNew:member",
              "docComment": "/**\n * Create a new context using the core and config from the current instance\n *\n * @param plugins - The execution order to process the plugins, if null or not supplied then the current execution order will be copied.\n *\n * @param startAt - The plugin to start processing from, if missing from the execution order then the next plugin will be NOT set.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "createNew: "
                },
                {
                  "kind": "Content",
                  "text": "(plugins?: "
                },
                {
                  "kind": "Reference",
                  "text": "IPlugin",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IPlugin:interface"
                },
                {
                  "kind": "Content",
                  "text": "[] | "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryPluginChain",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!ITelemetryPluginChain:interface"
                },
                {
                  "kind": "Content",
                  "text": ", startAt?: "
                },
                {
                  "kind": "Reference",
                  "text": "IPlugin",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IPlugin:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => "
                },
                {
                  "kind": "Reference",
                  "text": "IProcessTelemetryContext",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IProcessTelemetryContext:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "createNew",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IProcessTelemetryContext#diagLog:member",
              "docComment": "/**\n * THe current diagnostic logger for the request\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "diagLog: "
                },
                {
                  "kind": "Content",
                  "text": "() => "
                },
                {
                  "kind": "Reference",
                  "text": "IDiagnosticLogger",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IDiagnosticLogger:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "diagLog",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IProcessTelemetryContext#getCfg:member",
              "docComment": "/**\n * Gets the current core config instance\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getCfg: "
                },
                {
                  "kind": "Content",
                  "text": "() => "
                },
                {
                  "kind": "Reference",
                  "text": "IConfiguration",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IConfiguration:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "getCfg",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IProcessTelemetryContext#getConfig:member",
              "docComment": "/**\n * Gets the named config from either the named identifier extension or core config if neither exist then the default value is returned\n *\n * @param identifier - The named extension identifier\n *\n * @param field - The config field name\n *\n * @param defaultValue - The default value to return if no defined config exists\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getConfig: "
                },
                {
                  "kind": "Content",
                  "text": "(identifier: string, field: string, defaultValue?: number | string | boolean) => number | string | boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "getConfig",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IProcessTelemetryContext#getExtCfg:member",
              "docComment": "/**\n * Gets the named extension config\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getExtCfg: "
                },
                {
                  "kind": "Content",
                  "text": "<T>(identifier: string, defaultValue?: T | any) => T"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "getExtCfg",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IProcessTelemetryContext#getNext:member",
              "docComment": "/**\n * Returns the next configured plugin proxy\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getNext: "
                },
                {
                  "kind": "Content",
                  "text": "() => "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryPluginChain",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!ITelemetryPluginChain:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "getNext",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IProcessTelemetryContext#hasNext:member",
              "docComment": "/**\n * Helper to allow plugins to check and possibly shortcut executing code only required if there is a nextPlugin\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hasNext: "
                },
                {
                  "kind": "Content",
                  "text": "() => boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "hasNext",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IProcessTelemetryContext#processNext:member",
              "docComment": "/**\n * Call back for telemetry processing before it it is sent\n *\n * @param env - This is the current event being reported\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "processNext: "
                },
                {
                  "kind": "Content",
                  "text": "(env: "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryItem",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!ITelemetryItem:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "processNext",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IProcessTelemetryContext#setNext:member",
              "docComment": "/**\n * Helper to set the next plugin proxy\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setNext: "
                },
                {
                  "kind": "Content",
                  "text": "(nextCtx: "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryPluginChain",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!ITelemetryPluginChain:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "setNext",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!isArray:function(1)",
          "docComment": "/**\n * Check if an object is of type Array\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function isArray(obj: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "obj",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "isArray"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!isBoolean:function(1)",
          "docComment": "/**\n * Checks if the type of value is a boolean.\n *\n * @param value - Value to be checked.  @return {boolean} True if the value is a boolean, false otherwise.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function isBoolean(value: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "value",
              "canonicalReference": "@microsoft/applicationinsights-core-js!~value"
            },
            {
              "kind": "Content",
              "text": " is boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 5
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "value",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "isBoolean"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!isDate:function(1)",
          "docComment": "/**\n * Check if an object is of type Date\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function isDate(obj: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "obj",
              "canonicalReference": "@microsoft/applicationinsights-core-js!~obj"
            },
            {
              "kind": "Content",
              "text": " is "
            },
            {
              "kind": "Reference",
              "text": "Date",
              "canonicalReference": "!Date:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "obj",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "isDate"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!isError:function(1)",
          "docComment": "/**\n * Check if an object is of type Error\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function isError(obj: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "obj",
              "canonicalReference": "@microsoft/applicationinsights-core-js!~obj"
            },
            {
              "kind": "Content",
              "text": " is "
            },
            {
              "kind": "Reference",
              "text": "Error",
              "canonicalReference": "!Error:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "obj",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "isError"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!isFunction:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function isFunction(value: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "value",
              "canonicalReference": "@microsoft/applicationinsights-core-js!~value"
            },
            {
              "kind": "Content",
              "text": " is "
            },
            {
              "kind": "Reference",
              "text": "Function",
              "canonicalReference": "!Function:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "value",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "isFunction"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!isIE:function(1)",
          "docComment": "/**\n * Identifies whether the current environment appears to be IE\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function isIE(): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "isIE"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!isNotNullOrUndefined:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function isNotNullOrUndefined(value: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "value",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "isNotNullOrUndefined"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!isNotTruthy:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function isNotTruthy(value: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "value",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "isNotTruthy"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!isNotUndefined:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function isNotUndefined(value: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "value",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "isNotUndefined"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!isNullOrUndefined:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function isNullOrUndefined(value: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "value",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "isNullOrUndefined"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!isNumber:function(1)",
          "docComment": "/**\n * Checks if the type of value is a number.\n *\n * @param value - Value to be checked.  @return {boolean} True if the value is a number, false otherwise.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function isNumber(value: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "value",
              "canonicalReference": "@microsoft/applicationinsights-core-js!~value"
            },
            {
              "kind": "Content",
              "text": " is number"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 5
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "value",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "isNumber"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!isObject:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function isObject(value: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "value",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "isObject"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!isReactNative:function(1)",
          "docComment": "/**\n * Returns whether the environment is reporting that we are running in a React Native Environment\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function isReactNative(): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "isReactNative"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!isSafari:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function isSafari(userAgentStr?: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "userAgentStr",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "isSafari"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!isString:function(1)",
          "docComment": "/**\n * Checks if the type of value is a string.\n *\n * @param value - Value to be checked.  @return {boolean} True if the value is a string, false otherwise.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function isString(value: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "value",
              "canonicalReference": "@microsoft/applicationinsights-core-js!~value"
            },
            {
              "kind": "Content",
              "text": " is string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 5
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "value",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "isString"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!isSymbol:function(1)",
          "docComment": "/**\n * Checks if the type of value is a Symbol. This only returns a boolean as returning value is Symbol will cause issues for older TypeScript consumers\n *\n * @param value - Value to be checked.  @return {boolean} True if the value is a Symbol, false otherwise.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function isSymbol(value: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "value",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "isSymbol"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!isTruthy:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function isTruthy(value: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "value",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "isTruthy"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!isTypeof:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function isTypeof(value: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ", theType: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "value",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "theType",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "name": "isTypeof"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!isUndefined:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function isUndefined(value: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "value",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "isUndefined"
        },
        {
          "kind": "Interface",
          "canonicalReference": "@microsoft/applicationinsights-core-js!ITelemetryItem:interface",
          "docComment": "/**\n * Telemety item supported in Core\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ITelemetryItem "
            }
          ],
          "releaseTag": "Public",
          "name": "ITelemetryItem",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ITelemetryItem#baseData:member",
              "docComment": "/**\n * Based on schema for part B\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "baseData?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        [key: string]: any;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "baseData",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ITelemetryItem#baseType:member",
              "docComment": "/**\n * Telemetry type used for part B\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "baseType?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "baseType",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ITelemetryItem#data:member",
              "docComment": "/**\n * Custom data\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "data?: "
                },
                {
                  "kind": "Reference",
                  "text": "ICustomProperties",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!ICustomProperties:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "data",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ITelemetryItem#ext:member",
              "docComment": "/**\n * System context properties of the telemetry item, example: ip address, city etc\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ext?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        [key: string]: any;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "ext",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ITelemetryItem#iKey:member",
              "docComment": "/**\n * Identifier of the resource that uniquely identifies which resource data is sent to\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "iKey?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "iKey",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ITelemetryItem#name:member",
              "docComment": "/**\n * Unique name of the telemetry item\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ITelemetryItem#tags:member",
              "docComment": "/**\n * System context property extensions that are not global (not in ctx)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tags?: "
                },
                {
                  "kind": "Reference",
                  "text": "Tags",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!Tags:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "Tags",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!Tags:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "tags",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ITelemetryItem#time:member",
              "docComment": "/**\n * Timestamp when item was sent\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "time?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "time",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ITelemetryItem#ver:member",
              "docComment": "/**\n * CommonSchema Version of this SDK\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ver?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "ver",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@microsoft/applicationinsights-core-js!ITelemetryPlugin:interface",
          "docComment": "/**\n * Configuration provided to SDK core\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ITelemetryPlugin extends "
            },
            {
              "kind": "Reference",
              "text": "IPlugin",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IPlugin:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "ITelemetryPlugin",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ITelemetryPlugin#priority:member",
              "docComment": "/**\n * Priority of the extension\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly priority: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "priority",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ITelemetryPlugin#processTelemetry:member",
              "docComment": "/**\n * Call back for telemetry processing before it it is sent\n *\n * @param env - This is the current event being reported\n *\n * @param itemCtx - This is the context for the current request, ITelemetryPlugin instances can optionally use this to access the current core instance or define / pass additional information to later plugins (vs appending items to the telemetry item)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "processTelemetry: "
                },
                {
                  "kind": "Content",
                  "text": "(env: "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryItem",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!ITelemetryItem:interface"
                },
                {
                  "kind": "Content",
                  "text": ", itemCtx?: "
                },
                {
                  "kind": "Reference",
                  "text": "IProcessTelemetryContext",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IProcessTelemetryContext:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "processTelemetry",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ITelemetryPlugin#setNextPlugin:member",
              "docComment": "/**\n * Set next extension for telemetry processing, this is not optional as plugins should use the processNext() function of the passed IProcessTelemetryContext instead. It is being kept for now for backward compatibility only.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setNextPlugin?: "
                },
                {
                  "kind": "Content",
                  "text": "(next: "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryPlugin",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!ITelemetryPlugin:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryPluginChain",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!ITelemetryPluginChain:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "setNextPlugin",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@microsoft/applicationinsights-core-js!ITelemetryPluginChain:interface",
          "docComment": "/**\n * Configuration provided to SDK core\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ITelemetryPluginChain "
            }
          ],
          "releaseTag": "Public",
          "name": "ITelemetryPluginChain",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ITelemetryPluginChain#getNext:member",
              "docComment": "/**\n * Returns the next plugin\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getNext: "
                },
                {
                  "kind": "Content",
                  "text": "() => "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryPluginChain",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!ITelemetryPluginChain:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "getNext",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ITelemetryPluginChain#getPlugin:member",
              "docComment": "/**\n * Returns the underlying plugin that is being proxied for the processTelemetry call\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getPlugin: "
                },
                {
                  "kind": "Content",
                  "text": "() => "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryPlugin",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!ITelemetryPlugin:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "getPlugin",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ITelemetryPluginChain#processTelemetry:member",
              "docComment": "/**\n * Call back for telemetry processing before it it is sent\n *\n * @param env - This is the current event being reported\n *\n * @param itemCtx - This is the context for the current request, ITelemetryPlugin instances can optionally use this to access the current core instance or define / pass additional information to later plugins (vs appending items to the telemetry item)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "processTelemetry: "
                },
                {
                  "kind": "Content",
                  "text": "(env: "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryItem",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!ITelemetryItem:interface"
                },
                {
                  "kind": "Content",
                  "text": ", itemCtx: "
                },
                {
                  "kind": "Reference",
                  "text": "IProcessTelemetryContext",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IProcessTelemetryContext:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "processTelemetry",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Enum",
          "canonicalReference": "@microsoft/applicationinsights-core-js!LoggingSeverity:enum",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum LoggingSeverity "
            }
          ],
          "releaseTag": "Public",
          "name": "LoggingSeverity",
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!LoggingSeverity.CRITICAL:member",
              "docComment": "/**\n * Error will be sent as internal telemetry\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "CRITICAL = "
                },
                {
                  "kind": "Content",
                  "text": "1"
                }
              ],
              "releaseTag": "Public",
              "name": "CRITICAL",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!LoggingSeverity.WARNING:member",
              "docComment": "/**\n * Error will NOT be sent as internal telemetry, and will only be shown in browser console\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "WARNING = "
                },
                {
                  "kind": "Content",
                  "text": "2"
                }
              ],
              "releaseTag": "Public",
              "name": "WARNING",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ]
        },
        {
          "kind": "Variable",
          "canonicalReference": "@microsoft/applicationinsights-core-js!MinChannelPriorty:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "MinChannelPriorty: "
            },
            {
              "kind": "Content",
              "text": "number"
            }
          ],
          "releaseTag": "Public",
          "name": "MinChannelPriorty",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!mwcRandom32:function(1)",
          "docComment": "/**\n * Generate a random 32-bit number between (0x000000..0xFFFFFFFF) or (-0x80000000..0x7FFFFFFF), using MWC (Multiply with carry) instead of Math.random() defaults to un-signed. Used as a replacement random generator for IE to avoid issues with older IE instances.\n *\n * @param signed - True to return a signed 32-bit number (-0x80000000..0x7FFFFFFF) otherwise an unsigned one (0x000000..0xFFFFFFFF)\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function mwcRandom32(signed?: "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "signed",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "mwcRandom32"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!mwcRandomSeed:function(1)",
          "docComment": "/**\n * Seed the MWC random number generator with the specified seed or a random value\n *\n * @param value - optional the number to used as the seed, if undefined, null or zero a random value will be chosen\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function mwcRandomSeed(value?: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "value",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "mwcRandomSeed"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!newGuid:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function newGuid(): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "newGuid"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!newId:function(1)",
          "docComment": "/**\n * Generate random base64 id string. The default length is 22 which is 132-bits so almost the same as a GUID but as base64 (the previous default was 5)\n *\n * @param maxLength - Optional value to specify the length of the id to be generated, defaults to 22\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function newId(maxLength?: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "maxLength",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "newId"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!normalizeJsName:function(1)",
          "docComment": "/**\n * Validates that the string name conforms to the JS IdentifierName specification and if not normalizes the name so that it would. This method does not identify or change any keywords meaning that if you pass in a known keyword the same value will be returned. This is a simplified version\n *\n * @param name - The name to validate\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function normalizeJsName(name: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "name",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "normalizeJsName"
        },
        {
          "kind": "Class",
          "canonicalReference": "@microsoft/applicationinsights-core-js!NotificationManager:class",
          "docComment": "/**\n * Class to manage sending notifications to all the listeners.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class NotificationManager implements "
            },
            {
              "kind": "Reference",
              "text": "INotificationManager",
              "canonicalReference": "@microsoft/applicationinsights-core-js!INotificationManager:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "NotificationManager",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@microsoft/applicationinsights-core-js!NotificationManager:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `NotificationManager` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(config?: "
                },
                {
                  "kind": "Reference",
                  "text": "IConfiguration",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IConfiguration:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "config",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/applicationinsights-core-js!NotificationManager#addNotificationListener:member(1)",
              "docComment": "/**\n * Adds a notification listener.\n *\n * @param listener - The notification listener to be added.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addNotificationListener(listener: "
                },
                {
                  "kind": "Reference",
                  "text": "INotificationListener",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!INotificationListener:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "listener",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "addNotificationListener"
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/applicationinsights-core-js!NotificationManager#eventsDiscarded:member(1)",
              "docComment": "/**\n * Notification for events being discarded.\n *\n * @param events - The array of events that have been discarded by the SDK.\n *\n * @param reason - The reason for which the SDK discarded the events. The EventsDiscardedReason constant should be used to check the different values.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "eventsDiscarded(events: "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryItem",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!ITelemetryItem:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ", reason: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "events",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                },
                {
                  "parameterName": "reason",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  }
                }
              ],
              "name": "eventsDiscarded"
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/applicationinsights-core-js!NotificationManager#eventsSendRequest:member(1)",
              "docComment": "/**\n * [Optional] A function called when the events have been requested to be sent to the sever.\n *\n * @param sendReason - The reason why the event batch is being sent.\n *\n * @param isAsync - A flag which identifies whether the requests are being sent in an async or sync manner.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "eventsSendRequest?(sendReason: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", isAsync: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "sendReason",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "isAsync",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "eventsSendRequest"
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/applicationinsights-core-js!NotificationManager#eventsSent:member(1)",
              "docComment": "/**\n * Notification for events sent.\n *\n * @param events - The array of events that have been sent.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "eventsSent(events: "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryItem",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!ITelemetryItem:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "events",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                }
              ],
              "name": "eventsSent"
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/applicationinsights-core-js!NotificationManager#listeners:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "listeners: "
                },
                {
                  "kind": "Reference",
                  "text": "INotificationListener",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!INotificationListener:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "listeners",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/applicationinsights-core-js!NotificationManager#perfEvent:member(1)",
              "docComment": "/**\n * [Optional] This event is sent if you have enabled perf events, they are primarily used to track internal performance testing and debugging the event can be displayed via the debug plugin extension.\n *\n * @param perfEvent - \n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "perfEvent?(perfEvent: "
                },
                {
                  "kind": "Reference",
                  "text": "IPerfEvent",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IPerfEvent:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "perfEvent",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "perfEvent"
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/applicationinsights-core-js!NotificationManager#removeNotificationListener:member(1)",
              "docComment": "/**\n * Removes all instances of the listener.\n *\n * @param listener - AWTNotificationListener to remove.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "removeNotificationListener(listener: "
                },
                {
                  "kind": "Reference",
                  "text": "INotificationListener",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!INotificationListener:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "listener",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "removeNotificationListener"
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!objDefineAccessors:function(1)",
          "docComment": "/**\n * Try to define get/set object property accessors for the target object/prototype, this will provide compatibility with existing API definition when run within an ES5+ container that supports accessors but still enable the code to be loaded and executed in an ES3 container, providing basic IE8 compatibility.\n *\n * @param target - The object on which to define the property.\n *\n * @param prop - The name of the property to be defined or modified.\n *\n * @param getProp - The getter function to wire against the getter.\n *\n * @param setProp - The setter function to wire against the setter.\n *\n * @returns True if it was able to create the accessors otherwise false\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function objDefineAccessors<T>(target: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ", prop: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", getProp?: "
            },
            {
              "kind": "Content",
              "text": "() => T"
            },
            {
              "kind": "Content",
              "text": ", setProp?: "
            },
            {
              "kind": "Content",
              "text": "(v: T) => void"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 9,
            "endIndex": 10
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "target",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "prop",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            },
            {
              "parameterName": "getProp",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              }
            },
            {
              "parameterName": "setProp",
              "parameterTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "objDefineAccessors"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!objForEachKey:function(1)",
          "docComment": "/**\n * This is a helper function for the equivalent of arForEach(objKeys(target), callbackFn), this is a performance optimization to avoid the creation of a new array for large objects\n *\n * @param target - The target object to find and process the keys\n *\n * @param callbackfn - The function to call with the details\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function objForEachKey(target: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ", callbackfn: "
            },
            {
              "kind": "Content",
              "text": "(name: string, value: any) => void"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "target",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "callbackfn",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "name": "objForEachKey"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!objFreeze:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function objFreeze<T>(value: "
            },
            {
              "kind": "Content",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "value",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "objFreeze"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!objKeys:function(1)",
          "docComment": "/**\n * Returns the names of the enumerable string properties and methods of an object. This helper exists to avoid adding a polyfil for older browsers that do not define Object.keys eg. ES3 only, IE8 just in case any page checks for presence/absence of the prototype implementation. Note: For consistency this will not use the Object.keys implementation if it exists as this would cause a testing requirement to test with and without the implementations\n *\n * @param obj - Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function objKeys(obj: "
            },
            {
              "kind": "Content",
              "text": "{}"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string[]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "obj",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "objKeys"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!objSeal:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function objSeal<T>(value: "
            },
            {
              "kind": "Content",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "value",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "objSeal"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!optimizeObject:function(1)",
          "docComment": "/**\n * A helper function to assist with JIT performance for objects that have properties added / removed dynamically this is primarily for chromium based browsers and has limited effects on Firefox and none of IE. Only call this function after you have finished \"updating\" the object, calling this within loops reduces or defeats the benefits. This helps when iterating using for..in, objKeys() and objForEach()\n *\n * @param theObject - The object to be optimized if possible\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function optimizeObject<T>(theObject: "
            },
            {
              "kind": "Content",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "theObject",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "optimizeObject"
        },
        {
          "kind": "Class",
          "canonicalReference": "@microsoft/applicationinsights-core-js!PerfEvent:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class PerfEvent implements "
            },
            {
              "kind": "Reference",
              "text": "IPerfEvent",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IPerfEvent:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "PerfEvent",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@microsoft/applicationinsights-core-js!PerfEvent:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `PerfEvent` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", payloadDetails: "
                },
                {
                  "kind": "Content",
                  "text": "() => any"
                },
                {
                  "kind": "Content",
                  "text": ", isAsync: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "payloadDetails",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "isAsync",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/applicationinsights-core-js!PerfEvent.ChildrenContextKey:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static ChildrenContextKey: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ChildrenContextKey",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/applicationinsights-core-js!PerfEvent#complete:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "complete: "
                },
                {
                  "kind": "Content",
                  "text": "() => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "complete",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/applicationinsights-core-js!PerfEvent#exTime:member",
              "docComment": "/**\n * Identifies the exclusive time spent in for this event (not including child events), this will be undefined until the event is completed.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "exTime?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "exTime",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/applicationinsights-core-js!PerfEvent#getCtx:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getCtx?: "
                },
                {
                  "kind": "Content",
                  "text": "(key: string) => any | null | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "getCtx",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/applicationinsights-core-js!PerfEvent#isAsync:member",
              "docComment": "/**\n * Is this occurring from an asynchronous event\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isAsync: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isAsync",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/applicationinsights-core-js!PerfEvent#isChildEvt:member",
              "docComment": "/**\n * Identifies whether this event is a child event of a parent\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isChildEvt: "
                },
                {
                  "kind": "Content",
                  "text": "() => boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isChildEvt",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/applicationinsights-core-js!PerfEvent#name:member",
              "docComment": "/**\n * The name of the event\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/applicationinsights-core-js!PerfEvent.ParentContextKey:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static ParentContextKey: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ParentContextKey",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/applicationinsights-core-js!PerfEvent#payload:member",
              "docComment": "/**\n * The payload (contents) of the perfEvent, may be null or only set after the event has completed depending on the runtime environment.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "payload: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "payload",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/applicationinsights-core-js!PerfEvent#setCtx:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setCtx?: "
                },
                {
                  "kind": "Content",
                  "text": "(key: string, value: any) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "setCtx",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/applicationinsights-core-js!PerfEvent#start:member",
              "docComment": "/**\n * The start time of the event in ms\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "start: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "start",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/applicationinsights-core-js!PerfEvent#time:member",
              "docComment": "/**\n * Identifies the total inclusive time spent for this event, including the time spent for child events, this will be undefined until the event is completed\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "time?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "time",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "@microsoft/applicationinsights-core-js!PerfManager:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class PerfManager implements "
            },
            {
              "kind": "Reference",
              "text": "IPerfManager",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IPerfManager:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "PerfManager",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@microsoft/applicationinsights-core-js!PerfManager:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `PerfManager` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(manager: "
                },
                {
                  "kind": "Reference",
                  "text": "INotificationManager",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!INotificationManager:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "manager",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/applicationinsights-core-js!PerfManager#create:member(1)",
              "docComment": "/**\n * Create a new event and start timing, the manager may return null/undefined to indicate that it does not want to monitor this source event.\n *\n * @param src - The source name of the event\n *\n * @param payloadDetails - An optional callback function to fetch the payload details for the event.\n *\n * @param isAsync - Is the event occurring from a async event\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "create(src: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", payload?: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ", isAsync?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "IPerfEvent",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IPerfEvent:interface"
                },
                {
                  "kind": "Content",
                  "text": " | null | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "src",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "payload",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "isAsync",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "create"
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/applicationinsights-core-js!PerfManager#fire:member(1)",
              "docComment": "/**\n * Complete the perfEvent and fire any notifications.\n *\n * @param perfEvent - Fire the event which will also complete the passed event\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "fire(perfEvent: "
                },
                {
                  "kind": "Reference",
                  "text": "IPerfEvent",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IPerfEvent:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "perfEvent",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "fire"
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/applicationinsights-core-js!PerfManager#getCtx:member(1)",
              "docComment": "/**\n * Get the execution context value\n *\n * @param key - The context key\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getCtx(key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "getCtx"
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/applicationinsights-core-js!PerfManager#setCtx:member(1)",
              "docComment": "/**\n * Set an execution context value\n *\n * @param key - The context key name\n *\n * @param value - The value\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setCtx(key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", value: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "setCtx"
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!perfNow:function(1)",
          "docComment": "/**\n * Return the current value of the Performance Api now() function (if available) and fallback to dateNow() if it is unavailable (IE9 or less) https://caniuse.com/#search=performance.now\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function perfNow(): "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "perfNow"
        },
        {
          "kind": "Class",
          "canonicalReference": "@microsoft/applicationinsights-core-js!ProcessTelemetryContext:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class ProcessTelemetryContext implements "
            },
            {
              "kind": "Reference",
              "text": "IProcessTelemetryContext",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IProcessTelemetryContext:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "ProcessTelemetryContext",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ProcessTelemetryContext:constructor(1)",
              "docComment": "/**\n * Creates a new Telemetry Item context with the current config, core and plugin execution chain\n *\n * @param plugins - The plugin instances that will be executed\n *\n * @param config - The current config\n *\n * @param core - The current core instance\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(plugins: "
                },
                {
                  "kind": "Reference",
                  "text": "IPlugin",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IPlugin:interface"
                },
                {
                  "kind": "Content",
                  "text": "[] | "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryPluginChain",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!ITelemetryPluginChain:interface"
                },
                {
                  "kind": "Content",
                  "text": ", config: "
                },
                {
                  "kind": "Reference",
                  "text": "IConfiguration",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IConfiguration:interface"
                },
                {
                  "kind": "Content",
                  "text": ", core: "
                },
                {
                  "kind": "Reference",
                  "text": "IAppInsightsCore",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IAppInsightsCore:interface"
                },
                {
                  "kind": "Content",
                  "text": ", startAt?: "
                },
                {
                  "kind": "Reference",
                  "text": "IPlugin",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IPlugin:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "plugins",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "config",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                },
                {
                  "parameterName": "core",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  }
                },
                {
                  "parameterName": "startAt",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  }
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ProcessTelemetryContext#core:member",
              "docComment": "/**\n * Returns the IAppInsightsCore instance for the current request\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "core: "
                },
                {
                  "kind": "Content",
                  "text": "() => "
                },
                {
                  "kind": "Reference",
                  "text": "IAppInsightsCore",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IAppInsightsCore:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "core",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ProcessTelemetryContext#createNew:member",
              "docComment": "/**\n * Create a new context using the core and config from the current instance\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "createNew: "
                },
                {
                  "kind": "Content",
                  "text": "(plugins?: "
                },
                {
                  "kind": "Reference",
                  "text": "IPlugin",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IPlugin:interface"
                },
                {
                  "kind": "Content",
                  "text": "[] | "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryPluginChain",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!ITelemetryPluginChain:interface"
                },
                {
                  "kind": "Content",
                  "text": ", startAt?: "
                },
                {
                  "kind": "Reference",
                  "text": "IPlugin",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IPlugin:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => "
                },
                {
                  "kind": "Reference",
                  "text": "IProcessTelemetryContext",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IProcessTelemetryContext:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "createNew",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ProcessTelemetryContext#diagLog:member",
              "docComment": "/**\n * Returns the current IDiagnosticsLogger for the current request\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "diagLog: "
                },
                {
                  "kind": "Content",
                  "text": "() => "
                },
                {
                  "kind": "Reference",
                  "text": "IDiagnosticLogger",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IDiagnosticLogger:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "diagLog",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ProcessTelemetryContext#getCfg:member",
              "docComment": "/**\n * Gets the current core config instance\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getCfg: "
                },
                {
                  "kind": "Content",
                  "text": "() => "
                },
                {
                  "kind": "Reference",
                  "text": "IConfiguration",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!IConfiguration:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "getCfg",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ProcessTelemetryContext#getConfig:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getConfig: "
                },
                {
                  "kind": "Content",
                  "text": "(identifier: string, field: string, defaultValue?: number | string | boolean) => number | string | boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "getConfig",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ProcessTelemetryContext#getExtCfg:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getExtCfg: "
                },
                {
                  "kind": "Content",
                  "text": "<T>(identifier: string, defaultValue?: T | any) => T"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "getExtCfg",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ProcessTelemetryContext#getNext:member",
              "docComment": "/**\n * Returns the next configured plugin proxy\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getNext: "
                },
                {
                  "kind": "Content",
                  "text": "() => "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryPluginChain",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!ITelemetryPluginChain:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "getNext",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ProcessTelemetryContext#hasNext:member",
              "docComment": "/**\n * Helper to allow inherited classes to check and possibly shortcut executing code only required if there is a nextPlugin\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hasNext: "
                },
                {
                  "kind": "Content",
                  "text": "() => boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "hasNext",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ProcessTelemetryContext#processNext:member",
              "docComment": "/**\n * Call back for telemetry processing before it it is sent\n *\n * @param env - This is the current event being reported\n *\n * @param itemCtx - This is the context for the current request, ITelemetryPlugin instances can optionally use this to access the current core instance or define / pass additional information to later plugins (vs appending items to the telemetry item)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "processNext: "
                },
                {
                  "kind": "Content",
                  "text": "(env: "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryItem",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!ITelemetryItem:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "processNext",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ProcessTelemetryContext#setNext:member",
              "docComment": "/**\n * Helper to set the next plugin proxy\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setNext: "
                },
                {
                  "kind": "Content",
                  "text": "(nextCtx: "
                },
                {
                  "kind": "Reference",
                  "text": "ITelemetryPluginChain",
                  "canonicalReference": "@microsoft/applicationinsights-core-js!ITelemetryPluginChain:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "setNext",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!proxyAssign:function(1)",
          "docComment": "/**\n * Effectively assigns all enumerable properties (not just own properties) and functions (including inherited prototype) from the source object to the target, it attempts to use proxy getters / setters (if possible) and proxy functions to avoid potential implementation issues by assigning prototype functions as instance ones\n *\n * This method is the primary method used to \"update\" the snippet proxy with the ultimate implementations.\n *\n * Special ES3 Notes: Updates (setting) of direct property values on the target or indirectly on the source object WILL NOT WORK PROPERLY, updates to the properties of \"referenced\" object will work (target.context.newValue = 10 => will be reflected in the source.context as it's the same object). ES3 Failures: assigning target.myProp = 3 -> Won't change source.myProp = 3, likewise the reverse would also fail.\n *\n * @param target - The target object to be assigned with the source properties and functions\n *\n * @param source - The source object which will be assigned / called by setting / calling the targets proxies\n *\n * @param chkSet - An optional callback to determine whether a specific property/function should be proxied  @memberof Initialization\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function proxyAssign(target: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ", source: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ", chkSet?: "
            },
            {
              "kind": "Content",
              "text": "(name: string, isFunc?: boolean, source?: any, target?: any) => boolean"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "target",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "source",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            },
            {
              "parameterName": "chkSet",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              }
            }
          ],
          "name": "proxyAssign"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!random32:function(1)",
          "docComment": "/**\n * generate a random 32-bit number (0x000000..0xFFFFFFFF) or (-0x80000000..0x7FFFFFFF), defaults un-unsigned.\n *\n * @param signed - True to return a signed 32-bit number (-0x80000000..0x7FFFFFFF) otherwise an unsigned one (0x000000..0xFFFFFFFF)\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function random32(signed?: "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "signed",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "random32"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!randomValue:function(1)",
          "docComment": "/**\n * Generate a random value between 0 and maxValue, max value should be limited to a 32-bit maximum. So maxValue(16) will produce a number from 0..16 (range of 17)\n *\n * @param maxValue - \n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function randomValue(maxValue: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "maxValue",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "randomValue"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!safeGetCookieMgr:function(1)",
          "docComment": "/**\n * Helper to return the ICookieMgr from the core (if not null/undefined) or a default implementation associated with the configuration or a legacy default.\n *\n * @param core - \n *\n * @param config - \n *\n * @returns \n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function safeGetCookieMgr(core: "
            },
            {
              "kind": "Reference",
              "text": "IAppInsightsCore",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IAppInsightsCore:interface"
            },
            {
              "kind": "Content",
              "text": ", config?: "
            },
            {
              "kind": "Reference",
              "text": "IConfiguration",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IConfiguration:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "ICookieMgr",
              "canonicalReference": "@microsoft/applicationinsights-core-js!ICookieMgr:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "core",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "config",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "name": "safeGetCookieMgr"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!safeGetLogger:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function safeGetLogger(core: "
            },
            {
              "kind": "Reference",
              "text": "IAppInsightsCore",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IAppInsightsCore:interface"
            },
            {
              "kind": "Content",
              "text": ", config?: "
            },
            {
              "kind": "Reference",
              "text": "IConfiguration",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IConfiguration:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "IDiagnosticLogger",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IDiagnosticLogger:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "core",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "config",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "name": "safeGetLogger"
        },
        {
          "kind": "Enum",
          "canonicalReference": "@microsoft/applicationinsights-core-js!SendRequestReason:enum",
          "docComment": "/**\n * The EventsDiscardedReason enumeration contains a set of values that specify the reason for discarding an event.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare const enum SendRequestReason "
            }
          ],
          "releaseTag": "Public",
          "name": "SendRequestReason",
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!SendRequestReason.ManualFlush:member",
              "docComment": "/**\n * A manual flush request was received\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ManualFlush = "
                },
                {
                  "kind": "Content",
                  "text": "1"
                }
              ],
              "releaseTag": "Public",
              "name": "ManualFlush",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!SendRequestReason.MaxBatchSize:member",
              "docComment": "/**\n * Maximum batch size would be exceeded\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "MaxBatchSize = "
                },
                {
                  "kind": "Content",
                  "text": "10"
                }
              ],
              "releaseTag": "Public",
              "name": "MaxBatchSize",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!SendRequestReason.MaxQueuedEvents:member",
              "docComment": "/**\n * The Maximum number of events have already been queued\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "MaxQueuedEvents = "
                },
                {
                  "kind": "Content",
                  "text": "20"
                }
              ],
              "releaseTag": "Public",
              "name": "MaxQueuedEvents",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!SendRequestReason.NormalSchedule:member",
              "docComment": "/**\n * Events are being sent based on the normal event schedule / timer.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "NormalSchedule = "
                },
                {
                  "kind": "Content",
                  "text": "1"
                }
              ],
              "releaseTag": "Public",
              "name": "NormalSchedule",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!SendRequestReason.Resumed:member",
              "docComment": "/**\n * The Channel was resumed\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Resumed = "
                },
                {
                  "kind": "Content",
                  "text": "4"
                }
              ],
              "releaseTag": "Public",
              "name": "Resumed",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!SendRequestReason.Retry:member",
              "docComment": "/**\n * The event(s) being sent as a retry\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Retry = "
                },
                {
                  "kind": "Content",
                  "text": "5"
                }
              ],
              "releaseTag": "Public",
              "name": "Retry",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!SendRequestReason.SyncEvent:member",
              "docComment": "/**\n * The event(s) being sent are sync events\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "SyncEvent = "
                },
                {
                  "kind": "Content",
                  "text": "3"
                }
              ],
              "releaseTag": "Public",
              "name": "SyncEvent",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!SendRequestReason.Undefined:member",
              "docComment": "/**\n * No specific reason was specified\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Undefined = "
                },
                {
                  "kind": "Content",
                  "text": "0"
                }
              ],
              "releaseTag": "Public",
              "name": "Undefined",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/applicationinsights-core-js!SendRequestReason.Unload:member",
              "docComment": "/**\n * Unload event is being processed\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Unload = "
                },
                {
                  "kind": "Content",
                  "text": "2"
                }
              ],
              "releaseTag": "Public",
              "name": "Unload",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ]
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!setCookie:function(1)",
          "docComment": "/**\n * @deprecated\n *\n * - Use the core.getCookieMgr().set() helper method to set userId and sessionId cookie\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function setCookie(logger: "
            },
            {
              "kind": "Reference",
              "text": "IDiagnosticLogger",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IDiagnosticLogger:interface"
            },
            {
              "kind": "Content",
              "text": ", name: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", value: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", domain?: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 9,
            "endIndex": 10
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "logger",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "name",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            },
            {
              "parameterName": "value",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              }
            },
            {
              "parameterName": "domain",
              "parameterTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              }
            }
          ],
          "name": "setCookie"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!setEnableEnvMocks:function(1)",
          "docComment": "/**\n * Enable the lookup of test mock objects if requested\n *\n * @param enabled - \n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function setEnableEnvMocks(enabled: "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "enabled",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "setEnableEnvMocks"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!setValue:function(1)",
          "docComment": "/**\n * Sets the provided value on the target instance using the field name when the provided chk function returns true, the chk function will only be called if the new value is no equal to the original value.\n *\n * @param target - The target object\n *\n * @param field - The key of the target\n *\n * @param value - The value to set\n *\n * @param valChk - [Optional] Callback to check the value that if supplied will be called check if the new value can be set\n *\n * @param srcChk - [Optional] Callback to check to original value that if supplied will be called if the new value should be set (if allowed)\n *\n * @returns The existing or new value, depending what was set\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function setValue<T, K extends "
            },
            {
              "kind": "Content",
              "text": "keyof T"
            },
            {
              "kind": "Content",
              "text": ">(target: "
            },
            {
              "kind": "Content",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": ", field: "
            },
            {
              "kind": "Content",
              "text": "K"
            },
            {
              "kind": "Content",
              "text": ", value: "
            },
            {
              "kind": "Content",
              "text": "T[K]"
            },
            {
              "kind": "Content",
              "text": ", valChk?: "
            },
            {
              "kind": "Content",
              "text": "(value: T[K]) => boolean"
            },
            {
              "kind": "Content",
              "text": ", srcChk?: "
            },
            {
              "kind": "Content",
              "text": "(value: T[K]) => boolean"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "T[K]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 13,
            "endIndex": 14
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "target",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            },
            {
              "parameterName": "field",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              }
            },
            {
              "parameterName": "value",
              "parameterTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              }
            },
            {
              "parameterName": "valChk",
              "parameterTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              }
            },
            {
              "parameterName": "srcChk",
              "parameterTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 12
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "K",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "setValue"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!sortPlugins:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function sortPlugins(plugins: "
            },
            {
              "kind": "Reference",
              "text": "IPlugin",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IPlugin:interface"
            },
            {
              "kind": "Content",
              "text": "[]"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "IPlugin",
              "canonicalReference": "@microsoft/applicationinsights-core-js!IPlugin:interface"
            },
            {
              "kind": "Content",
              "text": "[]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 4,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "plugins",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "name": "sortPlugins"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!strContains:function(1)",
          "docComment": "/**\n * A simple wrapper (for minification support) to check if the value contains the search string.\n *\n * @param value - The string value to check for the existence of the search value\n *\n * @param search - The value search within the value\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function strContains(value: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", search: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "value",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "search",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "name": "strContains"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!strEndsWith:function(1)",
          "docComment": "/**\n * The strEndsWith() method determines whether a string ends with the characters of a specified string, returning true or false as appropriate.\n *\n * @param value - The value to check whether it ends with the search value.\n *\n * @param search - The characters to be searched for at the end of the value.\n *\n * @returns true if the given search value is found at the end of the string, otherwise false.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function strEndsWith(value: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", search: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "value",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "search",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "name": "strEndsWith"
        },
        {
          "kind": "Variable",
          "canonicalReference": "@microsoft/applicationinsights-core-js!strExtensionConfig:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "strExtensionConfig = \"extensionConfig\""
            }
          ],
          "releaseTag": "Public",
          "name": "strExtensionConfig",
          "variableTypeTokenRange": {
            "startIndex": 0,
            "endIndex": 0
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@microsoft/applicationinsights-core-js!strIKey:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "strIKey = \"iKey\""
            }
          ],
          "releaseTag": "Public",
          "name": "strIKey",
          "variableTypeTokenRange": {
            "startIndex": 0,
            "endIndex": 0
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!strStartsWith:function(1)",
          "docComment": "/**\n * The strStartsWith() method determines whether a string starts with the characters of the specified string, returning true or false as appropriate.\n *\n * @param value - The value to check whether it ends with the search value.\n *\n * @param checkValue - The characters to be searched for at the start of the value.\n *\n * @returns true if the given search value is found at the start of the string, otherwise false.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function strStartsWith(value: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", checkValue: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "value",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "checkValue",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "name": "strStartsWith"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!strTrim:function(1)",
          "docComment": "/**\n * helper method to trim strings (IE8 does not implement String.prototype.trim)\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function strTrim(str: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "str",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "strTrim"
        },
        {
          "kind": "Interface",
          "canonicalReference": "@microsoft/applicationinsights-core-js!Tags:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface Tags "
            }
          ],
          "releaseTag": "Public",
          "name": "Tags",
          "members": [
            {
              "kind": "IndexSignature",
              "canonicalReference": "@microsoft/applicationinsights-core-js!Tags:index(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "[key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "]: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!throwError:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function throwError(message: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "never"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "message",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "throwError"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!toISOString:function(1)",
          "docComment": "/**\n * Convert a date to I.S.O. format in IE8\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function toISOString(date: "
            },
            {
              "kind": "Reference",
              "text": "Date",
              "canonicalReference": "!Date:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "date",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "toISOString"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/applicationinsights-core-js!uaDisallowsSameSiteNone:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function uaDisallowsSameSiteNone(userAgent: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "userAgent",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "uaDisallowsSameSiteNone"
        },
        {
          "kind": "Variable",
          "canonicalReference": "@microsoft/applicationinsights-core-js!Undefined:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "Undefined = \"undefined\""
            }
          ],
          "releaseTag": "Public",
          "name": "Undefined",
          "variableTypeTokenRange": {
            "startIndex": 0,
            "endIndex": 0
          }
        }
      ]
    }
  ]
}
