{
	"": [
		"--------------------------------------------------------------------------------------------",
		"Copyright (c) Microsoft Corporation. All rights reserved.",
		"Licensed under the MIT License. See License.txt in the project root for license information.",
		"--------------------------------------------------------------------------------------------",
		"Do not edit this file. It is machine generated."
	],
	"version": "1.0.0",
	"contents": {
		"package": {
			"extension.description": "Unterstützung für das Node.js-Debugging (Versionen vor 8.0)",
			"node.label": "Node.js",
			"open.loaded.script": "Geladenes Skript öffnen",
			"attach.node.process": "An Node-Prozess anfügen",
			"toggle.skipping.this.file": "Überspringen dieser Datei aktivieren/deaktivieren",
			"start.with.stop.on.entry": "Debuggen starten und beim Eintrag beenden",
			"smartStep.description": "Hiermit wird automatisch der generierte Code durchlaufen, der nicht der ursprünglichen Quelle zugeordnet werden kann.",
			"skipFiles.description": "Ein Array für Globmuster für Dateien, die beim Debuggen übersprungen werden. Das Muster \"<node_internals>/**\" stimmt mit allen internen Node.js-Modulen überein.",
			"outFiles.description": "Wenn Quellzuordnungsdateien aktiviert sind, geben diese Globmuster die generierten JavaScript-Dateien an. Wenn ein Muster mit \"!\" beginnt, werden die Dateien ausgeschlossen. Sofern nicht angegeben, wird der generierte Code im selben Verzeichnis wie seine Quelle erwartet. Beispiel: [\"${workspaceFolder}/out/**/*.js\"]",
			"outDir.deprecationMessage": "Das Attribut \"outDir\" ist veraltet, verwenden Sie stattdessen \"outFiles\".",
			"trace.description": "Diagnoseausgabe erzeugen: Anstatt diese Einstellung auf \"true\" festzulegen, können Sie einen oder mehr durch Kommas getrennte Selektoren aufführen. Der Selektor \"verbose\" aktiviert die detaillierte Ausgabe.",
			"launch.args.description": "Befehlszeilenargumente, die an das Programm übergeben werden.",
			"debug.node.showUseWslIsDeprecatedWarning.description": "Steuert, ob eine Warnung angezeigt werden soll, wenn das Attribut \"useWSL\" verwendet wird.",
			"debug.node.useV3.description": "[Experimentell] Steuert, ob Startkonfigurationen vom Typ \"node\" an die js-debug-Erweiterung delegiert werden sollen.",
			"debug.extensionHost.useV3.description": "[Experimentell] Steuert, ob Startkonfigurationen vom Typ \"extensionHost\" an die js-debug-Erweiterung delegiert werden sollen.",
			"node.protocol.description": "Zu verwendendes Debugging-Protokoll für Node.js",
			"node.protocol.auto.description": "Versuchen, das beste Protokoll automatisch zu ermitteln, wobei \"inspector\" für das Starten von Node 8.0 und höher ausgewählt wird",
			"node.protocol.inspector.description": "Neues Protokoll, das von Node.js-Versionen vor 6.3 unterstützt wird",
			"node.protocol.legacy.description": "Altes Protokoll, das von Node.js-Versionen vor 8.0 unterstützt wird",
			"node.sourceMaps.description": "Hiermit werden JavaScript-Quellzuordnungsdateien verwendet (sofern vorhanden).",
			"node.stopOnEntry.description": "Hiermit wird das Programm nach dem Start automatisch beendet.",
			"node.port.description": "Der Debugport zum Anfügen. Der Standardwert ist 5858.",
			"node.address.description": "Die TCP/IP-Adresse des zu debuggenden Prozesses (nur für Node.js >= 5.0). Der Standardwert ist \"localhost\".",
			"node.timeout.description": "Gibt den Zeitraum in Millisekunden an, nach dem erneut versucht wird, eine Verbindung mit Node.js herzustellen. Der Standardwert ist 10000 ms.",
			"node.restart.description": "Hiermit wird die Sitzung neu gestartet, nachdem Node.js beendet wurde.",
			"node.localRoot.description": "Pfad zum lokalen Verzeichnis mit dem Programm.",
			"node.remoteRoot.description": "Absoluter Pfad zum Remoteverzeichnis mit dem Programm.",
			"node.showAsyncStacks.description": "Zeigt die asynchronen Aufrufe an, die zur aktuellen Aufrufliste geführt haben. Nur Protokoll \"inspector\".",
			"node.sourceMapPathOverrides.description": "Eine Gruppe von Mappings, mit denen die in der Sourcemap angegebenen Pfade der Quelldateien in ihre Pfade auf dem Datenträger umgeschrieben werden.",
			"node.disableOptimisticBPs.description": "Hiermit werden Haltepunkte in einer beliebigen Datei erst festgelegt, wenn eine Sourcemap für diese Datei geladen wurde.",
			"node.launch.program.description": "Der absolute Pfad zum Programm. Der generierte Wert wird anhand von \"package.json\" und geöffneter Dateien geschätzt. Bearbeiten Sie dieses Attribut.",
			"node.launch.externalConsole.deprecationMessage": "Das Attribut \"externalConsole\" ist veraltet. Verwenden Sie stattdessen \"console\".",
			"node.launch.console.description": "Startort des Debugziels",
			"node.launch.console.internalConsole.description": "Die Debugging-Konsole von VS Code (die das Lesen von Eingaben von einem Programm nicht unterstützt)",
			"node.launch.console.integratedTerminal.description": "Das integrierte Terminal von VS Code",
			"node.launch.console.externalTerminal.description": "Ein externes Terminal, das über die Benutzereinstellungen konfiguriert werden kann",
			"node.launch.cwd.description": "Absoluter Pfad zum Arbeitsverzeichnis des Programms, für das ein Debugging durchgeführt werden soll.",
			"node.launch.runtimeExecutable.description": "Die Runtime, die verwendet werden soll: Geben Sie entweder einen absoluten Pfad oder den Namen einer im Pfad verfügbaren Runtime an. Wenn keine Angabe erfolgt, wird \"node\" angenommen.",
			"node.launch.runtimeArgs.description": "Optionale Argumente, die an die ausführbare Datei der Runtime übergeben werden.",
			"node.launch.runtimeVersion.description": "Die Version der node-Runtime, die verwendet werden soll. Benötigt \"nvm\".",
			"node.launch.env.description": "Umgebungsvariablen, die an das Programm übergeben werden. Durch den Wert NULL wird die Variable aus der Umgebung entfernt.",
			"node.launch.envFile.description": "Absoluter Pfad zu einer Datei mit Umgebungsvariablendefinitionen.",
			"node.launch.useWSL.description": "Verwenden Sie das Windows-Subsystem für Linux.",
			"node.launch.useWSL.deprecation": "\"useWSL\" ist veraltet und wird demnächst nicht mehr unterstützt. Verwenden Sie stattdessen die Erweiterung \"Remote – WSL\".",
			"node.launch.outputCapture.description": "Hiermit wird angegeben, wo Ausgabemeldungen erfasst werden: Debug-API oder stdout/stderr-Streams.",
			"node.launch.autoAttachChildProcesses.description": "Debugger automatisch an neue Unterprozesse anfügen.",
			"node.launch.config.name": "Starten",
			"node.attach.processId.description": "Die ID des Prozesses für das Anfügen.",
			"node.attach.config.name": "Anfügen",
			"node.processattach.config.name": "An den Prozess anhängen",
			"node.snippet.launch.label": "Node.js: Programm starten",
			"node.snippet.launch.description": "Node-Programm im Debugmodus starten",
			"node.snippet.npm.label": "Node.js: Über NPM starten",
			"node.snippet.npm.description": "Node-Programme über das npm-Skript \"debug\" starten",
			"node.snippet.attach.label": "Node.js: Anfügen",
			"node.snippet.attach.description": "An ein ausgeführtes Node-Programm anfügen",
			"node.snippet.remoteattach.label": "Node.js: An Remote-Programm anfügen",
			"node.snippet.remoteattach.description": "An den Debugport eines Remote-Node-Programms anfügen",
			"node.snippet.attachProcess.label": "Node.js: An Prozess anfügen",
			"node.snippet.attachProcess.description": "Prozessauswahl zum Auswählen des Node-Prozesses zum Anfügen öffnen",
			"node.snippet.nodemon.label": "Node.js: Nodemon-Einrichtung",
			"node.snippet.nodemon.description": "Verwenden Sie Nodemon zum erneuten Starten einer Debugsitzung bei Quellenänderungen.",
			"node.snippet.mocha.label": "Node.js: Mocha-Tests",
			"node.snippet.mocha.description": "Mocha-Tests debuggen",
			"node.snippet.yo.label": "Node.js: Yeoman-Generator",
			"node.snippet.yo.description": "Yeoman-Generator debuggen (Installation erfolgt durch Ausführen von \"npm link\" im Projektordner)",
			"node.snippet.gulp.label": "Node.js: Gulp-Aufgabe",
			"node.snippet.gulp.description": "Gulp-Aufgabe debuggen (in Ihrem Projekt muss ein lokales Gulp installiert sein)",
			"node.snippet.electron.label": "Node.js: Electron-Hauptprozess",
			"node.snippet.electron.description": "Electron-Hauptprozess debuggen"
		},
		"dist/node/nodeDebug": {
			"setVariable.error": "Einstellungswert nicht unterstützt.",
			"exception.paused.promise.rejection": "Bei Promise-Rejection angehalten",
			"exception.promise.rejection.text": "Zusageablehnung ({0})",
			"exception.promise.rejection": "Zusageablehnung",
			"reason.description.step": "Bei Schritt angehalten",
			"reason.description.breakpoint": "Beim Haltepunkt angehalten",
			"reason.description.exception": "Bei Ausnahme angehalten",
			"reason.description.user_request": "Bei Benutzeranforderung angehalten",
			"reason.description.entry": "Bei Eintrag angehalten",
			"reason.description.debugger_statement": "Bei Debuggeranweisung angehalten",
			"reason.description.restart": "Bei Frameeintritt angehalten",
			"exceptions.all": "Alle Ausnahmen",
			"exceptions.uncaught": "Nicht abgefangene Ausnahmen",
			"exceptions.rejects": "Zusageablehnungen",
			"VSND2028": "Unbekannter Konsolentyp \"{0}\".",
			"attribute.wls.not.exist": "Die Installation des Windows-Subsystems für Linux wurde nicht gefunden.",
			"VSND2001": "Die Runtime \"{0}\" wurde nicht in PATH gefunden. Stellen Sie sicher, dass \"{0}\" installiert ist.",
			"program.path.case.mismatch.warning": "Der Programmpfad verwendet eine andere Groß-/Kleinschreibung als die Datei auf dem Datenträger. Dies kann dazu führen, dass Haltepunkte nicht wirksam sind.",
			"VSND2002": "Das Programm \"{0}\" kann nicht gestartet werden. Möglicherweise kann das Problem durch Konfigurieren von Quellzuordnungsdateien behoben werden.",
			"VSND2009": "Das Programm \"{0}\" kann nicht gestartet werden, weil das zugehörige JavaScript nicht gefunden wurde.",
			"VSND2003": "Das Programm \"{0}\" kann nicht gestartet werden. Möglicherweise kann das Problem durch Festlegen des Attributs \"{1}\" behoben werden.",
			"VSND2029": "Umgebungsvariablen können nicht aus Datei geladen werden ({0}).",
			"node.console.title": "Node-Debugging-Konsole",
			"VSND2011": "Das Debugziel im Terminal kann nicht gestartet werden ({0}).",
			"VSND2017": "Das Debugziel kann nicht gestartet werden ({0}).",
			"VSND2010": "Es kann keine Verbindung mit dem Laufzeitprozess hergestellt werden (Ursache: {0}).",
			"VSND2033": "Es kann keine Verbindung mit der Runtime hergestellt werden. Stellen Sie sicher, dass für die Runtime der Debugmodus \"legacy\" festgelegt ist.",
			"VSND2034": "Über das Protokoll \"legacy\" kann keine Verbindung mit der Runtime hergestellt werden. Versuchen Sie, das Protokoll \"inspector\" zu verwenden.",
			"file.on.disk.changed": "Nicht überprüft, weil sich die Datei auf dem Datenträger geändert hat. Starten Sie die Debugsitzung neu.",
			"VSND2019": "Das interne Modul {0} wurde nicht gefunden.",
			"sourcemapping.fail.message": "Der Haltepunkt wurde ignoriert, weil der generierte Code nicht gefunden wurde (Problem mit Quellzuordnungsdatei?).",
			"VSND2022": "Keine Aufrufliste verfügbar, weil das Programm außerhalb von JavaScript angehalten wurde.",
			"VSND2023": "Es ist keine Aufrufliste verfügbar.",
			"VSND2018": "Es ist keine Aufrufliste verfügbar ({_command}: {_error}).",
			"origin.from.node": "Schreibgeschützter Inhalt aus Node.js",
			"origin.from.remote.node": "Schreibgeschützter Inhalt aus Remote-Node.js.",
			"origin.core.module": "Schreibgeschütztes Kernmodul",
			"source.skipFiles": "Aufgrund von \"skipFiles\" übersprungen",
			"source.smartstep": "Aufgrund von \"smartStep\" übersprungen",
			"origin.inlined.source.map": "Schreibgeschützter Inlineinhalt aus Quellzuordnungsdatei",
			"anonymous.function": "(anonyme Funktion)",
			"scope.local.with.count": "Lokal ({0} von {1})",
			"scope.unknown": "Unbekannter Bereichstyp: {0}",
			"scope.exception": "Ausnahme",
			"eval.not.available": "Nicht verfügbar",
			"eval.invalid.expression": "Ungültiger Ausdruck: \"{0}\"",
			"source.not.found": "Inhalt konnte nicht abgerufen werden.",
			"attribute.path.not.exist": "Das Attribut \"{0}\" ist nicht vorhanden ({1}).",
			"attribute.path.not.absolute": "Das Attribut \"{0}\" ist nicht absolut ({1}). Erwägen Sie das Hinzufügen von \"{2}\" als Präfix, um ein absolutes Attribut zu erhalten.",
			"more.information": "Weitere Informationen",
			"VSND2015": "Die Anforderung \"{_request}\" wurde abgebrochen, weil Node.js nicht reagiert.",
			"VSND2016": "Node.js\" hat auf die Anforderung \"{_request}\" nicht innerhalb einer angemessenen Zeitspanne geantwortet.",
			"scope.global": "GLOBAL",
			"scope.local": "LOCAL",
			"scope.with": "mit",
			"scope.closure": "Closure",
			"scope.catch": "Catch",
			"scope.block": "Block",
			"scope.script": "Skript"
		},
		"dist/node/nodeV8Protocol": {
			"not.connected": "Keine Verbindung mit Runtime.",
			"runtime.unresponsive": "Abgebrochen, weil Node.js nicht reagiert.",
			"runtime.timeout": "Timeout nach {0} ms"
		},
		"dist/node/extension/autoAttach": {
			"process.with.pid.label": "Automatisch angefügt ({0})"
		},
		"dist/node/extension/cluster": {
			"child.process.with.pid.label": "Untergeordneter Prozess \"{0}\""
		},
		"dist/node/extension/configurationProvider": {
			"program.not.found.message": "Es wurde kein zu debuggendes Programm gefunden",
			"useWslDeprecationWarning.title": "Das Attribut \"useWSL\" ist veraltet. Verwenden Sie stattdessen die Erweiterung \"Remote WSL\". Klicken Sie [hier]({0}), um weitere Informationen zu erhalten.",
			"useWslDeprecationWarning.doNotShowAgain": "Nicht mehr anzeigen",
			"NVS_HOME.not.found.message": "Das Attribut \"runtimeVersion\" erfordert den Node.js-Versions-Manager \"nvs\".",
			"NVM_HOME.not.found.message": "Das Attribut \"runtimeVersion\" erfordert den Node.js-Versions-Manager \"nvm-windows\" oder \"nvs\".",
			"NVM_DIR.not.found.message": "Das Attribut \"runtimeVersion\" erfordert den Node.js-Versions-Manager \"nvm\" oder \"nvs\".",
			"runtime.version.not.found.message": "Die Node.js-Version \"{0}\" ist für \"{1}\" nicht installiert.",
			"node.launch.config.name": "Programm starten",
			"mern.starter.explanation": "Startet die Konfiguration für das erstellte Projekt \"{0}\".",
			"program.guessed.from.package.json.explanation": "Startet die auf Basis von \"package.json\" erstellte Konfiguration.",
			"outFiles.explanation": "Stellt das oder die Globmuster im \"outFiles\"- Attribut so ein, dass sie den generierten JavaScript-Code abdecken."
		},
		"dist/node/extension/processPicker": {
			"pid.error": "An Prozess anfügen: Der Prozess \"{0}\" kann nicht in den Debugmodus gesetzt werden.",
			"process.id.error": "An Prozess anfügen: \"{0}\" scheint keine Prozess-ID zu sein.",
			"pickNodeProcess": "Node.js-Prozess zum Anfügen auswählen",
			"process.picker.error": "Fehler bei der Prozessauswahl ({0})",
			"process.id.port": "Prozess-ID: {0}, Debugport: {1}",
			"process.id.port.legacy": "Prozess-ID: {0}, Debugport: {1} (Legacy-Protokoll)",
			"process.id.port.signal": "Prozess-ID: {0}, Debugport: {1} ({2})",
			"process.id.signal": "Prozess-ID: {0} ({1})",
			"cannot.enable.debug.mode.error": "An den Prozess anhängen: Der Debugmodus für den Prozess \"{0}\" kann nicht aktiviert werden ({1})."
		},
		"dist/node/extension/protocolDetection": {
			"protocol.switch.legacy.detected": "Debugging mit Legacy-Protokoll, da es erkannt wurde.",
			"protocol.switch.unknown.error": "Das Debugging erfolgt mit dem Inspektorprotokoll, weil die Node.js-Version nicht ermittelt werden konnte ({0}).",
			"protocol.switch.legacy.version": "Node.js {0} wurde erkannt. Deswegen erfolgt das Debuggen mit dem Legacyprotokoll."
		}
	}
}