<p>Scope analysis does not provide support for undeclared variables.</p><p><em>0</em> instances of <strong>missing semicolons</strong> counted.</p><p><em>0</em> unnecessary instances of the keyword <strong>new</strong> counted.</p><div class="beautify" data-prettydiff-ignore="true"><ol class="count"><li>1</li><li class="fold" title="folds from line 2 to line 63">-2</li><li class="fold" title="folds from line 3 to line 25">-3</li><li>4</li><li>5</li><li>6</li><li>7</li><li>8</li><li>9</li><li>10</li><li>11</li><li>12</li><li>13</li><li>14</li><li>15</li><li>16</li><li>17</li><li>18</li><li>19</li><li>20</li><li>21</li><li>22</li><li>23</li><li>24</li><li>25</li><li>26</li><li class="fold" title="folds from line 27 to line 58">-27</li><li>28</li><li>29</li><li>30</li><li>31</li><li>32</li><li>33</li><li>34</li><li>35</li><li>36</li><li>37</li><li>38</li><li>39</li><li>40</li><li>41</li><li>42</li><li>43</li><li>44</li><li class="fold" title="folds from line 45 to line 57">-45</li><li class="fold" title="folds from line 46 to line 48">-46</li><li>47</li><li>48</li><li>49</li><li class="fold" title="folds from line 50 to line 52">-50</li><li>51</li><li>52</li><li class="fold" title="folds from line 53 to line 55">-53</li><li>54</li><li>55</li><li>56</li><li>57</li><li>58</li><li>59</li><li>60</li><li>61</li><li>62</li><li>63</li></ol>
<ol class="data"><li class="c0">    /*global global*/<em class="line">&#xA;</em></li><li class="l0">(function <em class="s0">pdcomment_init</em>() <em class="s1">{</em><em class="line">&#xA;</em></li><li class="c0">    // parses the prettydiff settings comment<em class="line">&#xA;</em></li><li class="c0">    //<em class="line">&#xA;</em></li><li class="c0">    // - Source Priorities:<em class="line">&#xA;</em></li><li class="c0">    // * the prettydiff comment is only accepted if it occurs before non-comments<em class="line">&#xA;</em></li><li class="c0">    // (near the top)<em class="line">&#xA;</em></li><li class="c0">    // * options.source is the priority material for reading the comment<em class="line">&#xA;</em></li><li class="c0">    // * the prettydiff comment will be processed from options.diff only if it<em class="line">&#xA;</em></li><li class="c0">    // present there, missing from options.source, and options.mode is diff<em class="line">&#xA;</em></li><li class="c0">    //<em class="line">&#xA;</em></li><li class="c0">    // - Examples:<em class="line">&#xA;</em></li><li class="c0">    //    /*prettydiff.com width:80 preserve:4*/<em class="line">&#xA;</em></li><li class="c0">    //    /* prettydiff.com width:80 preserve:4 */<em class="line">&#xA;</em></li><li class="c0">    //    /*prettydiff.com width=80 preserve=4 */<em class="line">&#xA;</em></li><li class="c0">    //    // prettydiff.com width=80 preserve:4<em class="line">&#xA;</em></li><li class="c0">    //    &lt;!-- prettydiff.com width:80 preserve=4 --&gt;<em class="line">&#xA;</em></li><li class="c0">    //    &lt;!--prettydiff.com width:40 preserve:2--&gt;<em class="line">&#xA;</em></li><li class="c0">    //<em class="line">&#xA;</em></li><li class="c0">    // - Parsing Considerations:<em class="line">&#xA;</em></li><li class="c0">    // * there may be any amount of space at the start or end of the comment<em class="line">&#xA;</em></li><li class="c0">    // * "prettydiff.com" must exist at the start of the comment<em class="line">&#xA;</em></li><li class="c0">    // * comment must exist prior to non-comment tokens (near top of code)<em class="line">&#xA;</em></li><li class="c0">    // * parameters are name value pairs separated by white space<em class="line">&#xA;</em></li><li class="c0">    // * the delimiter separating name and value is either ":" or "=" characters<em class="line">&#xA;</em></li><li class="l1"><span class="l0">    </span>"use strict";<em class="line">&#xA;</em></li><li class="l1"><span class="l0">    </span>const <em class="s1">pdcomment</em>    = function <em class="s1">pdcomment_</em>(<em class="s2">options</em>) <em class="s2">{</em><em class="line">&#xA;</em></li><li class="l2"><span class="l0">    </span><span class="l1">    </span>let <em class="s2">pdcom</em>   = <em class="s2">options</em>.source.search(/((\/(\*|\/))|&lt;!--*)\s*prettydiff\.com/),<em class="line">&#xA;</em></li><li class="l2"><span class="l0">    </span><span class="l1">    </span><span class="l2">    </span><em class="s2">a</em>       = (<em class="s2">pdcom</em> &gt; -1)<em class="line">&#xA;</em></li><li class="l2"><span class="l0">    </span><span class="l1">    </span><span class="l2">    </span><span class="l2">    </span>? <em class="s2">pdcom</em><em class="line">&#xA;</em></li><li class="l2"><span class="l0">    </span><span class="l1">    </span><span class="l2">    </span><span class="l2">    </span>: <em class="s2">options</em>.diff.search(/((\/(\*|\/))|&lt;!--*)\s*prettydiff\.com/),<em class="line">&#xA;</em></li><li class="l2"><span class="l0">    </span><span class="l1">    </span><span class="l2">    </span><em class="s2">b</em>       = 0,<em class="line">&#xA;</em></li><li class="l2"><span class="l0">    </span><span class="l1">    </span><span class="l2">    </span><em class="s2">quote</em>   = "",<em class="line">&#xA;</em></li><li class="l2"><span class="l0">    </span><span class="l1">    </span><span class="l2">    </span><em class="s2">op</em>      = [];<em class="line">&#xA;</em></li><li class="l2"><span class="l0">    </span><span class="l1">    </span>const <em class="s2">ops</em>   = [],<em class="line">&#xA;</em></li><li class="l2"><span class="l0">    </span><span class="l1">    </span><span class="l2">    </span><em class="s2">source</em>  = (<em class="s2">pdcom</em> &gt; -1)<em class="line">&#xA;</em></li><li class="l2"><span class="l0">    </span><span class="l1">    </span><span class="l2">    </span><span class="l2">    </span>? <em class="s2">options</em>.source<em class="line">&#xA;</em></li><li class="l2"><span class="l0">    </span><span class="l1">    </span><span class="l2">    </span><span class="l2">    </span>: <em class="s2">options</em>.diff,<em class="line">&#xA;</em></li><li class="l2"><span class="l0">    </span><span class="l1">    </span><span class="l2">    </span><em class="s2">len</em>     = <em class="s2">source</em>.length,<em class="line">&#xA;</em></li><li class="l2"><span class="l0">    </span><span class="l1">    </span><span class="l2">    </span><em class="s2">comment</em> = (<em class="s2">source</em>.charAt(<em class="s2">a</em>) === "&lt;")<em class="line">&#xA;</em></li><li class="l2"><span class="l0">    </span><span class="l1">    </span><span class="l2">    </span><span class="l2">    </span>? "&lt;!--"<em class="line">&#xA;</em></li><li class="l2"><span class="l0">    </span><span class="l1">    </span><span class="l2">    </span><span class="l2">    </span>: (<em class="s2">source</em>.charAt(<em class="s2">a</em> + 1) === "/")<em class="line">&#xA;</em></li><li class="l2"><span class="l0">    </span><span class="l1">    </span><span class="l2">    </span><span class="l2">    </span><span class="l2">    </span>? "//"<em class="line">&#xA;</em></li><li class="l2"><span class="l0">    </span><span class="l1">    </span><span class="l2">    </span><span class="l2">    </span><span class="l2">    </span>: "/\u002a",<em class="line">&#xA;</em></li><li class="l2"><span class="l0">    </span><span class="l1">    </span><span class="l2">    </span><em class="s2">esc</em>     = function <em class="s2">pdcomment_esc</em>() <em class="s3">{</em><em class="line">&#xA;</em></li><li class="l3"><span class="l0">    </span><span class="l1">    </span><span class="l2">    </span><span class="l3">    </span>if (<em class="s2">source</em>.charAt(<em class="s2">a</em> - 1) !== "\\") <em class="s4">{</em><em class="line">&#xA;</em></li><li class="l4"><span class="l0">    </span><span class="l1">    </span><span class="l2">    </span><span class="l3">    </span><span class="l3">    </span>return false;<em class="line">&#xA;</em></li><li class="l3"><span class="l0">    </span><span class="l1">    </span><span class="l2">    </span><span class="l3">    </span><em class="s4">}</em><em class="line">&#xA;</em></li><li class="l3"><span class="l0">    </span><span class="l1">    </span><span class="l2">    </span><span class="l3">    </span>let <em class="s3">x</em> = <em class="s2">a</em>;<em class="line">&#xA;</em></li><li class="l3"><span class="l0">    </span><span class="l1">    </span><span class="l2">    </span><span class="l3">    </span>do <em class="s4">{</em><em class="line">&#xA;</em></li><li class="l4"><span class="l0">    </span><span class="l1">    </span><span class="l2">    </span><span class="l3">    </span><span class="l3">    </span><em class="s3">x</em> = <em class="s3">x</em> - 1;<em class="line">&#xA;</em></li><li class="l3"><span class="l0">    </span><span class="l1">    </span><span class="l2">    </span><span class="l3">    </span><em class="s4">}</em> while (<em class="s3">x</em> &gt; 0 &amp;&amp; <em class="s2">source</em>.charAt(<em class="s3">x</em>) === "\\");<em class="line">&#xA;</em></li><li class="l3"><span class="l0">    </span><span class="l1">    </span><span class="l2">    </span><span class="l3">    </span>if ((<em class="s2">a</em> - <em class="s3">x</em>) % 2 === 0) <em class="s4">{</em><em class="line">&#xA;</em></li><li class="l4"><span class="l0">    </span><span class="l1">    </span><span class="l2">    </span><span class="l3">    </span><span class="l3">    </span>return true;<em class="line">&#xA;</em></li><li class="l3"><span class="l0">    </span><span class="l1">    </span><span class="l2">    </span><span class="l3">    </span><em class="s4">}</em><em class="line">&#xA;</em></li><li class="l3"><span class="l0">    </span><span class="l1">    </span><span class="l2">    </span><span class="l3">    </span>return false;<em class="line">&#xA;</em></li><li class="l2"><span class="l0">    </span><span class="l1">    </span><span class="l2">    </span><em class="s3">}</em>;<em class="line">&#xA;</em></li><li class="l1"><span class="l0">    </span><em class="s2">}</em>;<em class="line">&#xA;</em></li><li class="l1"><span class="l0">    </span><em class="s0">global</em><em class="line">&#xA;</em></li><li class="l1"><span class="l0">    </span><span class="l1">    </span>.prettydiff<em class="line">&#xA;</em></li><li class="l1"><span class="l0">    </span><span class="l1">    </span>.api<em class="line">&#xA;</em></li><li class="l1"><span class="l0">    </span><span class="l1">    </span>.pdcommenttttt = <em class="s1">pdcomment</em>;<em class="line">&#xA;</em></li><li class="l0"><em class="s1">}</em>());<em class="line">&#xA;</em></li></ol></div>
