{
	"": [
		"--------------------------------------------------------------------------------------------",
		"Copyright (c) Microsoft Corporation. All rights reserved.",
		"Licensed under the MIT License. See License.txt in the project root for license information.",
		"--------------------------------------------------------------------------------------------",
		"Do not edit this file. It is machine generated."
	],
	"version": "1.0.0",
	"contents": {
		"package": {
			"colors.added": "Color for added resources",
			"colors.conflict": "Color for resources with conflicts",
			"colors.deleted": "Color for deleted resources",
			"colors.incomingAdded": "Color for incoming added resources",
			"colors.incomingDeleted": "Color for incoming deleted resources",
			"colors.incomingModified": "Color for incoming modified resources",
			"colors.incomingRenamed": "Color for incoming renamed resources",
			"colors.modified": "Color for modified resources",
			"colors.possibleConflict": "Color for resources with possible conflicts",
			"command.timeline.compareWithSelected": "Compare with Selected",
			"command.timeline.copyCommitId": "Copy Commit ID",
			"command.timeline.copyCommitMessage": "Copy Commit Message",
			"command.timeline.openDiff": "Open Changes",
			"command.timeline.openOnGitHub": "Open on GitHub",
			"command.timeline.selectForCompare": "Select for Compare",
			"commands.addRepositoryToWorkspace": "Add Remote Repository to Workspace...",
			"commands.clone": "Clone Repository Locally...",
			"commands.commit": "Commit",
			"commands.continueOn": "Continue on...",
			"commands.createBranch": "Create New Branch...",
			"commands.createBranchFrom": "Create New Branch from...",
			"commands.createDraftPullRequest": "Create a Draft Pull Request",
			"commands.createPullRequest": "Create a Pull Request",
			"commands.deleteAllLocalRepositoryData": "Delete All Local Repository Data",
			"commands.deleteLocalRepositoryData": "Delete Local Repository Data...",
			"commands.discardAllChanges": "Discard All Changes",
			"commands.discardChanges": "Discard Changes",
			"commands.enableIndexing": "Enable Search Indexing",
			"commands.exportPatch": "Export Changes...",
			"commands.fetch": "Fetch",
			"commands.keepChanges": "Keep Changes",
			"commands.openChanges": "Open Changes",
			"commands.openFile": "Open File",
			"commands.openInCodespaces": "Open in Codespaces...",
			"commands.openOnDesktop": "Reopen on the Desktop",
			"commands.openOnRemote": "Open on GitHub",
			"commands.openOnWeb": "Reopen on the Web",
			"commands.openRepository": "Open Remote Repository...",
			"commands.pull": "Pull",
			"commands.stageAllChanges": "Stage All Changes",
			"commands.stageChanges": "Stage Changes",
			"commands.switchToBranch": "Switch to Branch...",
			"commands.sync": "Sync (Pull & Push)",
			"commands.unstageAllChanges": "Unstage All Changes",
			"commands.unstageChanges": "Unstage Changes",
			"config.autoFetch.enabled": "Specifies whether to periodically fetch from the upstream repository",
			"config.autoFetch.interval": "Specifies the interval, in seconds, to periodically fetch from the upstream repository",
			"config.search.download.corsProxy": "Specifies the proxy to use when downloading repository indicies from a browser context",
			"config.search.download.enabled": "Specifies whether text search should download an index of the repository in order to provide more accurate search results",
			"config.search.download.repoLimit": "Specifies the maximum number of search indicies cached per repo. Each reference requires a separate search index",
			"config.search.download.sizeLimit": "Specifies the size (in MB) of search index cache. The search cache is located in the extension's global storage folder",
			"config.staging.enabled": "Specifies whether to enable the staging of changes before committing",
			"config.staging.smart": "Specifies whether to automatically stage all changes, if there are none, before committing",
			"description": "Remotely browse and edit a GitHub repository",
			"displayName": "Remote Repositories (RemoteHub)",
			"displayNameInsiders": "RemoteHub (Insiders)",
			"submenu.branch": "Branch",
			"submenu.changes": "Changes",
			"submenu.commit": "Commit",
			"submenu.export": "Export",
			"submenu.pullRequest": "Pull Request",
			"viewsWelcome.debug": "Run and Debug are not available in this environment. To run and debug, you will need to continue in another Visual Studio Code setup.",
			"viewsWelcome.debug.continueOn": "[Continue on...](command:remoteHub.continueOn 'Continue working on this remote repository elsewhere')",
			"viewsWelcome.explorer": "Or, you can remotely open a repository or pull request directly from Visual Studio Code without cloning.\r\n[Open Remote Repository](command:remoteHub.openRepository 'Open a remote repository (e.g. from GitHub)')",
			"viewsWelcome.explorer.web": "Or, you can remotely open a repository or pull request directly from Visual Studio Code.\r\n[Open Remote Repository](command:remoteHub.openRepository 'Open a remote repository (e.g. from GitHub)')",
			"viewsWelcome.terminal": "Terminals are not available in this environment. To use the terminal, you will need to continue in another Visual Studio Code setup.",
			"viewsWelcome.terminal.continueOn": "[Continue on...](command:remoteHub.continueOn 'Continue working on this remote repository elsewhere')"
		}
	}
}