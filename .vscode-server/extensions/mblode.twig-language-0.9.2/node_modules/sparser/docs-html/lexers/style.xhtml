<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE html><html xml:lang="en" xmlns="http://www.w3.org/1999/xhtml">

<!-- Automatically generated file. Do not manually alter! -->

<head><title>Lexer - style</title> <link href="https://sparser.io/docs-html/lexers/style.xhtml" rel="canonical" type="application/xhtml+xml"/> <meta content="width=device-width, initial-scale=1" name="viewport"/> <meta content="index, follow" name="robots"/> <meta content="Sparser - Universal Parser" name="DC.title"/> <meta content="#fff" name="theme-color"/> <meta content="Austin Cheney" name="author"/> <meta content="Sparser is a programming language parsing utility that can interpret many different languages using a single simple data model." name="description"/> <meta content="Global" name="distribution"/> <meta content="en" http-equiv="Content-Language"/> <meta content="application/xhtml+xml;charset=UTF-8" http-equiv="Content-Type"/> <meta content="blendTrans(Duration=0)" http-equiv="Page-Enter"/> <meta content="blendTrans(Duration=0)" http-equiv="Page-Exit"/> <meta content="text/css" http-equiv="content-style-type"/> <meta content="application/javascript" http-equiv="content-script-type"/> <meta content="google515f7751c9f8a155" name="google-site-verification"/> <meta content="#bbbbff" name="msapplication-TileColor"/> <link href="/website.css" media="all" rel="stylesheet" type="text/css"/> </head><body id="documentation"><div id="top_menu"><h1><a href="/">Sparser</a></h1>
<ul><li class="donate"><a href="https://liberapay.com/prettydiff/donate"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 80 80" height="16" width="16" x="7" y="7"><g transform="translate(-78.37-208.06)" fill="#111"><path d="m104.28 271.1c-3.571 0-6.373-.466-8.41-1.396-2.037-.93-3.495-2.199-4.375-3.809-.88-1.609-1.308-3.457-1.282-5.544.025-2.086.313-4.311.868-6.675l9.579-40.05 11.69-1.81-10.484 43.44c-.202.905-.314 1.735-.339 2.489-.026.754.113 1.421.415 1.999.302.579.817 1.044 1.546 1.395.729.353 1.747.579 3.055.679l-2.263 9.278"/><path d="m146.52 246.14c0 3.671-.604 7.03-1.811 10.07-1.207 3.043-2.879 5.669-5.01 7.881-2.138 2.213-4.702 3.935-7.693 5.167-2.992 1.231-6.248 1.848-9.767 1.848-1.71 0-3.42-.151-5.129-.453l-3.394 13.651h-11.162l12.52-52.19c2.01-.603 4.311-1.143 6.901-1.622 2.589-.477 5.393-.716 8.41-.716 2.815 0 5.242.428 7.278 1.282 2.037.855 3.708 2.024 5.02 3.507 1.307 1.484 2.274 3.219 2.904 5.205.627 1.987.942 4.11.942 6.373m-27.378 15.461c.854.202 1.91.302 3.167.302 1.961 0 3.746-.364 5.355-1.094 1.609-.728 2.979-1.747 4.111-3.055 1.131-1.307 2.01-2.877 2.64-4.714.628-1.835.943-3.858.943-6.071 0-2.161-.479-3.998-1.433-5.506-.956-1.508-2.615-2.263-4.978-2.263-1.61 0-3.118.151-4.525.453l-5.28 21.948"/></g></svg> Donate</a></li> <li><a href="/demo/?scrolldown">Demo</a></li> <li><a href="/docs-html/tech-documentation.xhtml">Documentation</a></li> <li><a href="https://github.com/unibeautify/sparser">Github</a></li> <li><a href="https://www.npmjs.com/package/sparser">NPM</a></li></ul><span class="clear"></span></div><div id="content"><h1><span>Sparser</span>Lexer - style</h1>
<div class="section"><h2 id="types-values">types values</h2>
<ul><li><strong>colon</strong> - Describes a <code><![CDATA[:]]></code> character. This types value exists to uniquely set colon characters apart from other types values.</li><li><strong>comment</strong> - Describes standard CSS block comments as well as line comments that exist in languages like LESS and SCSS.</li><li><strong>end</strong> - Describes the characters <code><![CDATA[}]]></code> and <code><![CDATA[)]]></code> if the parenthesis closes a structure described as <em>map</em>.</li><li><strong>function</strong> - Describes a name followed by a single set of parenthesis which is followed by either a semicolon or closing curly brace.</li><li><strong>item</strong> - This is an internally used value that should not be exposed outside the lexer unless the lexer receives an incomplete code sample.</li><li><strong>selector</strong> - Describes a CSS selector.</li><li><strong>semi</strong> - Describes a <code><![CDATA[;]]></code> character. This types value exists to uniquely set semicolon characters apart from other types values.</li><li><strong>start</strong> - Describes <code><![CDATA[{]]></code> and <code><![CDATA[(]]></code> if the parenthesis is part of a map structure.</li><li><strong>template</strong> - Describes a token comprising an external template language that is not of start or end types.</li><li><strong>template_else</strong> - Various template languages commonly offer conditions with else branches. Else tokens do not behave the same way as a templates start or end types.</li><li><strong>template_end</strong> - Describes the opening sequence for a third party language template tag.</li><li><strong>template_start</strong> - Describes the closing sequence for a third party language template tag.</li><li><strong>value</strong> - Describes CSS property values, which is generally anything that follows a colon, even if not a known property, but does not immediately precede some sort of structure opening.</li><li><strong>variable</strong> - Languages like LESS and SCSS allow defining and referencing from variables.</li></ul></div><div class="section"><h2 id="stack-values">stack values</h2>
<p>The style lexer takes the identifier, typically a selector, preceding the start types value of the current stack as the value.</p>
</div><div class="section"><h2 id="escaping-code-from-the-parser">Escaping code from the parser</h2>
<p>The parser is capable of selectively ignoring blocks of code. This occurs when a comment is present starting with <code><![CDATA[parse-ignore-start]]></code> until a later comment is encountered starting with <code><![CDATA[parse-ignore-end]]></code>. It does not matter whether the comments are JavaScript-like line comments or standard block comments.</p>
<p>Example:</p>
<p><code class="language-css"><![CDATA[a {
    color: red;
}

/* parse-ignore-start */
div {
    background: blue;
}
/* parse-ignore-end */

td {
    text-align: right;
}]]></code></p>
<p>Code from the opening comment to the closing comment is parsed as a single token of types value <em>ignore</em>.</p>
Everything below this line is dynamically generated!</div><div class="section"><h2 id="supported-languages">supported languages</h2>
<ul><li><a href="https://www.w3.org/Style/CSS/#news">CSS</a>
</li><li><a href="http://lesscss.org/">LESS</a>
</li><li><a href="https://postcss.org/">PostCSS</a>
</li><li><a href="https://sass-lang.com/">SCSS (Sass)</a>
</li></ul></div><div class="section"><h2 id="style-options">style options</h2>
<ul><li><strong>no_lead_zero</strong>: Whether the zero to the left of the decimal point should be removed from numbers between 0 and 1. <ul><li>type: boolean</li><li>default: false</li></ul></li><li><strong>object_sort</strong>: Where style properties should be sorted by type and then alphabetically and whether script object properties should be sorted alphabetically. <ul><li>type: boolean</li><li>default: false</li></ul></li><li><strong>quote_convert</strong>: If quote characters should be converted from single quotes to double quotes or the opposite. This option does take into account escaped quote characters. <ul><li>type: string</li><li>default: none</li><li>values: <ul><li><em>double</em>: Converts single quote characters to double quote characters.</li><li><em>none</em>: Ignores this option.</li><li><em>single</em>: Converts double quote characters to single quote characters.</li></ul></li></ul></li></ul></div></div><div id="blobs"><span id="svg_left"></span><span id="svg_right"></span><div></div></div><script src="/js/website.js" type="application/javascript"></script></body></html>