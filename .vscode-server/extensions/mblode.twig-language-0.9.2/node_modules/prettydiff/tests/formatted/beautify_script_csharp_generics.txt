public static List<TestTable> ToListLinq(DataTable dt) {
    return dt
        .AsEnumerable()
        .Select(item => new TestTable() {
            ID        = item.Field<int>(nameof(TestTable.ID)),
            Bit1      = item.Field<bool>(nameof(TestTable.Bit1)),
            Bit2      = item.Field<bool>(nameof(TestTable.Bit2)),
            Bit3      = item.Field<bool>(nameof(TestTable.Bit3)),
            Bit4      = item.Field<bool>(nameof(TestTable.Bit4)),
            Bit5      = item.Field<bool>(nameof(TestTable.Bit5)),
            Bit6      = item.Field<bool?>(nameof(TestTable.Bit6)),
            Bit7      = item.Field<bool?>(nameof(TestTable.Bit7)),
            Bit8      = item.Field<bool?>(nameof(TestTable.Bit8)),
            Bit9      = item.Field<bool?>(nameof(TestTable.Bit9)),
            Bit10     = item.Field<bool?>(nameof(TestTable.Bit10)),
            Float1    = item.Field<double>(nameof(TestTable.Float1)),
            Float2    = item.Field<double>(nameof(TestTable.Float2)),
            Float3    = item.Field<double>(nameof(TestTable.Float3)),
            Float4    = item.Field<double>(nameof(TestTable.Float4)),
            Float5    = item.Field<double>(nameof(TestTable.Float5)),
            Float6    = item.Field<double?>(nameof(TestTable.Float6)),
            Float7    = item.Field<double?>(nameof(TestTable.Float7)),
            Float8    = item.Field<double?>(nameof(TestTable.Float8)),
            Float9    = item.Field<double?>(nameof(TestTable.Float9)),
            Float10   = item.Field<double?>(nameof(TestTable.Float10)),
            Int1      = item.Field<int>(nameof(TestTable.Int1)),
            Int2      = item.Field<int>(nameof(TestTable.Int2)),
            Int3      = item.Field<int>(nameof(TestTable.Int3)),
            Int4      = item.Field<int>(nameof(TestTable.Int4)),
            Int5      = item.Field<int>(nameof(TestTable.Int5)),
            Int6      = item.Field<int?>(nameof(TestTable.Int6)),
            Int7      = item.Field<int?>(nameof(TestTable.Int7)),
            Int8      = item.Field<int?>(nameof(TestTable.Int8)),
            Int9      = item.Field<int?>(nameof(TestTable.Int9)),
            Int10     = item.Field<int?>(nameof(TestTable.Int10)),
            VarChar1  = item.Field<string>(nameof(TestTable.VarChar1)),
            VarChar2  = item.Field<string>(nameof(TestTable.VarChar2)),
            VarChar3  = item.Field<string>(nameof(TestTable.VarChar3)),
            VarChar4  = item.Field<string>(nameof(TestTable.VarChar4)),
            VarChar5  = item.Field<string>(nameof(TestTable.VarChar5)),
            VarChar6  = item.Field<string>(nameof(TestTable.VarChar6)),
            VarChar7  = item.Field<string>(nameof(TestTable.VarChar7)),
            VarChar8  = item.Field<string>(nameof(TestTable.VarChar8)),
            VarChar9  = item.Field<string>(nameof(TestTable.VarChar9)),
            VarChar10 = item.Field<string>(nameof(TestTable.VarChar10)),
        })
        .ToList();
}
